$ template make_tokens()
module Tokens = struct

(* This file was generated by SableCC (http://www.sablecc.org/). *)
  type linepos = { line : int; pos : int; }

  let string_of_linepos p = "[" ^ (string_of_int p.line) ^ "," ^
    (string_of_int p.pos) ^ "]";

  type baretoken = 
      EOF
$ foreach {//token[@text]}
    | @ename
$ end foreach
$ foreach {//token[not(@text)]}
    | @ename of string
$ end foreach

  type token = T of linepos * baretoken | Null_Token 

  let getPos = function 
      (T (lp, _)) -> string_of_linepos lp
    | (Null_Token) -> "[null]"

  let getText t = match t with
  | Null_Token -> failwith "can't get token from null" 
  | T (_, t1) -> match t1 with
      EOF -> "EOF"
$ foreach {//token[not(@text)]}
    | @ename i -> i
$ end foreach
$ foreach {//token[@text]}
    | @ename -> "${sablecc:string2escaped_unicode(@text)}"
$ end foreach

  let getId t = match t with 
  | Null_Token -> failwith "can't get id from null" 
  | T (_, t1) -> match t1 with
      EOF -> "EOF"
$ foreach {//token[not(@text)]}
    | @ename i -> "${sablecc:string2escaped_unicode(@ename)}"
$ end foreach
$ foreach {//token[@text]}
    | @ename -> "${sablecc:string2escaped_unicode(@ename)}"
$ end foreach

end
$ end template
