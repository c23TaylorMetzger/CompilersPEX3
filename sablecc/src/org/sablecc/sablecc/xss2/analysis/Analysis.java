/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.xss2.analysis;

import org.sablecc.sablecc.xss2.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object in);
    Object getOut(Node node);
    void setOut(Node node, Object out);

    void caseStart(Start node);
    void caseAScript(AScript node);
    void caseADataStatement(ADataStatement node);
    void caseAForeachStatement(AForeachStatement node);
    void caseAIncludeStatement(AIncludeStatement node);
    void caseAIfStatement(AIfStatement node);
    void caseAChooseStatement(AChooseStatement node);
    void caseASetStatement(ASetStatement node);
    void caseAParamStatement(AParamStatement node);
    void caseAOutputStatement(AOutputStatement node);
    void caseATemplateStatement(ATemplateStatement node);
    void caseACallStatement(ACallStatement node);
    void caseAPrintStatement(APrintStatement node);
    void caseASeparatorStatement(ASeparatorStatement node);
    void caseAChooseWhen(AChooseWhen node);
    void caseAOarg(AOarg node);
    void caseAArg(AArg node);
    void caseALiteralExpr(ALiteralExpr node);
    void caseAXpathExpr(AXpathExpr node);
    void caseAIattribExpr(AIattribExpr node);
    void caseAIvarExpr(AIvarExpr node);
    void caseAConcatExpr(AConcatExpr node);
    void caseAPathXpathExpr(APathXpathExpr node);
    void caseALiteralXpathExpr(ALiteralXpathExpr node);
    void caseANumberXpathExpr(ANumberXpathExpr node);
    void caseAFunctionXpathExpr(AFunctionXpathExpr node);
    void caseAEqualsXpathExpr(AEqualsXpathExpr node);
    void caseANotEqualsXpathExpr(ANotEqualsXpathExpr node);
    void caseAOrXpathExpr(AOrXpathExpr node);
    void caseAAndXpathExpr(AAndXpathExpr node);
    void caseAAddXpathExpr(AAddXpathExpr node);
    void caseASubXpathExpr(ASubXpathExpr node);
    void caseAMulXpathExpr(AMulXpathExpr node);
    void caseADivXpathExpr(ADivXpathExpr node);
    void caseAModXpathExpr(AModXpathExpr node);
    void caseALessXpathExpr(ALessXpathExpr node);
    void caseALessOrEqualXpathExpr(ALessOrEqualXpathExpr node);
    void caseAGreaterXpathExpr(AGreaterXpathExpr node);
    void caseAGreaterOrEqualXpathExpr(AGreaterOrEqualXpathExpr node);
    void caseAXpathPathElem(AXpathPathElem node);
    void caseANameXpathElem(ANameXpathElem node);
    void caseAVarXpathElem(AVarXpathElem node);
    void caseAAttribXpathElem(AAttribXpathElem node);
    void caseAParentXpathElem(AParentXpathElem node);
    void caseACurrentXpathElem(ACurrentXpathElem node);
    void caseAOneXpathSeparator(AOneXpathSeparator node);
    void caseAAnyXpathSeparator(AAnyXpathSeparator node);

    void caseTDataComment(TDataComment node);
    void caseTCmdStart(TCmdStart node);
    void caseTCmdEnd(TCmdEnd node);
    void caseTForeach(TForeach node);
    void caseTReverseForeach(TReverseForeach node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTChoose(TChoose node);
    void caseTWhen(TWhen node);
    void caseTEnd(TEnd node);
    void caseTInclude(TInclude node);
    void caseTIn(TIn node);
    void caseTOtherwise(TOtherwise node);
    void caseTSet(TSet node);
    void caseTParam(TParam node);
    void caseTOutput(TOutput node);
    void caseTTemplate(TTemplate node);
    void caseTCall(TCall node);
    void caseTSep(TSep node);
    void caseTPrint(TPrint node);
    void caseTEquals(TEquals node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTComma(TComma node);
    void caseTPlus(TPlus node);
    void caseTData(TData node);
    void caseTIxpathStart(TIxpathStart node);
    void caseTIattrib(TIattrib node);
    void caseTIvar(TIvar node);
    void caseTBlank(TBlank node);
    void caseTIdentifier(TIdentifier node);
    void caseTXpathStart(TXpathStart node);
    void caseTLiteral(TLiteral node);
    void caseTComment(TComment node);
    void caseTXor(TXor node);
    void caseTXand(TXand node);
    void caseTXmod(TXmod node);
    void caseTXdiv(TXdiv node);
    void caseTXname(TXname node);
    void caseTXvar(TXvar node);
    void caseTXsepAny(TXsepAny node);
    void caseTXsepOne(TXsepOne node);
    void caseTXcurrent(TXcurrent node);
    void caseTXparent(TXparent node);
    void caseTXattrib(TXattrib node);
    void caseTXlBrace(TXlBrace node);
    void caseTXrBrace(TXrBrace node);
    void caseTXlPar(TXlPar node);
    void caseTXrPar(TXrPar node);
    void caseTXequals(TXequals node);
    void caseTXnotEquals(TXnotEquals node);
    void caseTXmul(TXmul node);
    void caseTXadd(TXadd node);
    void caseTXsub(TXsub node);
    void caseTXless(TXless node);
    void caseTXlessOrEqual(TXlessOrEqual node);
    void caseTXgreater(TXgreater node);
    void caseTXgreaterOrEqual(TXgreaterOrEqual node);
    void caseTXcomma(TXcomma node);
    void caseTXliteral(TXliteral node);
    void caseTXnumber(TXnumber node);
    void caseTXpathEnd(TXpathEnd node);
    void caseEOF(EOF node);
}
