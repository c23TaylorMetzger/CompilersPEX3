/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.node;

import java.util.*;
import org.sablecc.sablecc.analysis.*;

public final class ANewListTerm extends PListTerm
{
    private PProdName _prod_name_;
    private TLPar _l_par_;
    private final LinkedList _params_ = new TypedLinkedList(new Params_Cast());

    public ANewListTerm ()
    {
    }

    public ANewListTerm (
            PProdName _prod_name_,
            TLPar _l_par_,
            List _params_
    )
    {
        setProdName (_prod_name_);
        setLPar (_l_par_);
        this._params_.clear();
        this._params_.addAll(_params_);
    }

    public Object clone()
    {
        return new ANewListTerm (
            (PProdName)cloneNode (_prod_name_),
            (TLPar)cloneNode (_l_par_),
            cloneList (_params_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANewListTerm(this);
    }

    public PProdName getProdName ()
    {
        return _prod_name_;
    }

    public void setProdName (PProdName node)
    {
        if(_prod_name_ != null)
        {
            _prod_name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _prod_name_ = node;
    }
    public TLPar getLPar ()
    {
        return _l_par_;
    }

    public void setLPar (TLPar node)
    {
        if(_l_par_ != null)
        {
            _l_par_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _l_par_ = node;
    }
    public LinkedList getParams ()
    {
        return _params_;
    }

    public void setParams (List list)
    {
        _params_.clear();
        _params_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString (_prod_name_)
            + toString (_l_par_)
            + toString (_params_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _prod_name_ == child )
        {
            _prod_name_ = null;
            return;
        }
        if ( _l_par_ == child )
        {
            _l_par_ = null;
            return;
        }
        if ( _params_.remove(child))
        {
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _prod_name_ == oldChild )
        {
            setProdName ((PProdName) newChild);
            return;
        }
        if ( _l_par_ == oldChild )
        {
            setLPar ((TLPar) newChild);
            return;
        }
        for(ListIterator i = _params_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }
    }

    private class Params_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PTerm node = (PTerm) o;

            if((node.parent() != null) &&
                (node.parent() != ANewListTerm.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != ANewListTerm.this))
            {
                node.parent(ANewListTerm.this);
            }

            return node;
        }
    }
}
