/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.node;

import java.util.*;
import org.sablecc.sablecc.analysis.*;

public final class AElem extends PElem
{
    private TId _elem_name_;
    private PSpecifier _specifier_;
    private TId _id_;
    private PUnOp _un_op_;

    public AElem ()
    {
    }

    public AElem (
            TId _elem_name_,
            PSpecifier _specifier_,
            TId _id_,
            PUnOp _un_op_
    )
    {
        setElemName (_elem_name_);
        setSpecifier (_specifier_);
        setId (_id_);
        setUnOp (_un_op_);
    }

    public Object clone()
    {
        return new AElem (
            (TId)cloneNode (_elem_name_),
            (PSpecifier)cloneNode (_specifier_),
            (TId)cloneNode (_id_),
            (PUnOp)cloneNode (_un_op_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAElem(this);
    }

    public TId getElemName ()
    {
        return _elem_name_;
    }

    public void setElemName (TId node)
    {
        if(_elem_name_ != null)
        {
            _elem_name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _elem_name_ = node;
    }
    public PSpecifier getSpecifier ()
    {
        return _specifier_;
    }

    public void setSpecifier (PSpecifier node)
    {
        if(_specifier_ != null)
        {
            _specifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _specifier_ = node;
    }
    public TId getId ()
    {
        return _id_;
    }

    public void setId (TId node)
    {
        if(_id_ != null)
        {
            _id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _id_ = node;
    }
    public PUnOp getUnOp ()
    {
        return _un_op_;
    }

    public void setUnOp (PUnOp node)
    {
        if(_un_op_ != null)
        {
            _un_op_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _un_op_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_elem_name_)
            + toString (_specifier_)
            + toString (_id_)
            + toString (_un_op_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _elem_name_ == child )
        {
            _elem_name_ = null;
            return;
        }
        if ( _specifier_ == child )
        {
            _specifier_ = null;
            return;
        }
        if ( _id_ == child )
        {
            _id_ = null;
            return;
        }
        if ( _un_op_ == child )
        {
            _un_op_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _elem_name_ == oldChild )
        {
            setElemName ((TId) newChild);
            return;
        }
        if ( _specifier_ == oldChild )
        {
            setSpecifier ((PSpecifier) newChild);
            return;
        }
        if ( _id_ == oldChild )
        {
            setId ((TId) newChild);
            return;
        }
        if ( _un_op_ == oldChild )
        {
            setUnOp ((PUnOp) newChild);
            return;
        }
    }

}
