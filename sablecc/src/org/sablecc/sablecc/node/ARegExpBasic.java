/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.node;

import java.util.*;
import org.sablecc.sablecc.analysis.*;

public final class ARegExpBasic extends PBasic
{
    private PRegExp _reg_exp_;

    public ARegExpBasic ()
    {
    }

    public ARegExpBasic (
            PRegExp _reg_exp_
    )
    {
        setRegExp (_reg_exp_);
    }

    public Object clone()
    {
        return new ARegExpBasic (
            (PRegExp)cloneNode (_reg_exp_)
        );
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARegExpBasic(this);
    }

    public PRegExp getRegExp ()
    {
        return _reg_exp_;
    }

    public void setRegExp (PRegExp node)
    {
        if(_reg_exp_ != null)
        {
            _reg_exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _reg_exp_ = node;
    }

    public String toString()
    {
        return ""
            + toString (_reg_exp_)
        ;
    }

    void removeChild(Node child)
    {
        if ( _reg_exp_ == child )
        {
            _reg_exp_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if ( _reg_exp_ == oldChild )
        {
            setRegExp ((PRegExp) newChild);
            return;
        }
    }

}
