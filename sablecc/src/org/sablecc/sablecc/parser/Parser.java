/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.parser;

import org.sablecc.sablecc.lexer.*;
import org.sablecc.sablecc.node.*;
import org.sablecc.sablecc.analysis.*;
import java.util.*;

import java.io.*;

public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_shift;
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(Lexer lexer)
    {
        this.lexer = lexer;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        if(!stack.hasNext())
        {
            stack.add(new State(numstate, listNode));
            return;
        }

        State s = (State) stack.next();
        s.state = numstate;
        s.nodes = listNode;
    }

    private int state()
    {
        State s = (State) stack.previous();
        stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return (ArrayList) ((State) stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        converter.index = -1;
        token.apply(converter);
        return converter.index;
    }

    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);

        List ign = null;
        while(true)
        {
            while(index(lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new TypedLinkedList(NodeCast.instance);
                }

                ign.add(lexer.next());
            }

            if(ign != null)
            {
                ignoredTokens.setIn(lexer.peek(), ign);
                ign = null;
            }

            last_pos = lexer.peek().getPos();
            last_line = lexer.peek().getLine();
            last_token = lexer.peek();

            int index = index(lexer.peek());
            action[0] = actionTable[state()][0][1];
            action[1] = actionTable[state()][0][2];

            int low = 1;
            int high = actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    action[0] = actionTable[state()][middle][1];
                    action[1] = actionTable[state()][middle][2];
                    break;
                }
            }

            switch(action[0])
            {
              case SHIFT:
              {
                ArrayList nodeList = new ArrayList(1);
                nodeList.add(lexer.next());
                push(action[1], nodeList);
                last_shift = action[1];
                break;
              }
              case REDUCE:
              {
                switch(action[1])
                {
                  case 0:
                  {
                    ArrayList nodeList = new0();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 1:
                  {
                    ArrayList nodeList = new1();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 2:
                  {
                    ArrayList nodeList = new2();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 3:
                  {
                    ArrayList nodeList = new3();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 4:
                  {
                    ArrayList nodeList = new4();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 5:
                  {
                    ArrayList nodeList = new5();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 6:
                  {
                    ArrayList nodeList = new6();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 7:
                  {
                    ArrayList nodeList = new7();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 8:
                  {
                    ArrayList nodeList = new8();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 9:
                  {
                    ArrayList nodeList = new9();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 10:
                  {
                    ArrayList nodeList = new10();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 11:
                  {
                    ArrayList nodeList = new11();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 12:
                  {
                    ArrayList nodeList = new12();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 13:
                  {
                    ArrayList nodeList = new13();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 14:
                  {
                    ArrayList nodeList = new14();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 15:
                  {
                    ArrayList nodeList = new15();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 16:
                  {
                    ArrayList nodeList = new16();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 17:
                  {
                    ArrayList nodeList = new17();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 18:
                  {
                    ArrayList nodeList = new18();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 19:
                  {
                    ArrayList nodeList = new19();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 20:
                  {
                    ArrayList nodeList = new20();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 21:
                  {
                    ArrayList nodeList = new21();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 22:
                  {
                    ArrayList nodeList = new22();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 23:
                  {
                    ArrayList nodeList = new23();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 24:
                  {
                    ArrayList nodeList = new24();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 25:
                  {
                    ArrayList nodeList = new25();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 26:
                  {
                    ArrayList nodeList = new26();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 27:
                  {
                    ArrayList nodeList = new27();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 28:
                  {
                    ArrayList nodeList = new28();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 29:
                  {
                    ArrayList nodeList = new29();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 30:
                  {
                    ArrayList nodeList = new30();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 31:
                  {
                    ArrayList nodeList = new31();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 32:
                  {
                    ArrayList nodeList = new32();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 33:
                  {
                    ArrayList nodeList = new33();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 34:
                  {
                    ArrayList nodeList = new34();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 35:
                  {
                    ArrayList nodeList = new35();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 36:
                  {
                    ArrayList nodeList = new36();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 37:
                  {
                    ArrayList nodeList = new37();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 38:
                  {
                    ArrayList nodeList = new38();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 39:
                  {
                    ArrayList nodeList = new39();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 40:
                  {
                    ArrayList nodeList = new40();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 41:
                  {
                    ArrayList nodeList = new41();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 42:
                  {
                    ArrayList nodeList = new42();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 43:
                  {
                    ArrayList nodeList = new43();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 44:
                  {
                    ArrayList nodeList = new44();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 45:
                  {
                    ArrayList nodeList = new45();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 46:
                  {
                    ArrayList nodeList = new46();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 47:
                  {
                    ArrayList nodeList = new47();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 48:
                  {
                    ArrayList nodeList = new48();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 49:
                  {
                    ArrayList nodeList = new49();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 50:
                  {
                    ArrayList nodeList = new50();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 51:
                  {
                    ArrayList nodeList = new51();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 52:
                  {
                    ArrayList nodeList = new52();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 53:
                  {
                    ArrayList nodeList = new53();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 54:
                  {
                    ArrayList nodeList = new54();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 55:
                  {
                    ArrayList nodeList = new55();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 56:
                  {
                    ArrayList nodeList = new56();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 57:
                  {
                    ArrayList nodeList = new57();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 58:
                  {
                    ArrayList nodeList = new58();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 59:
                  {
                    ArrayList nodeList = new59();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 60:
                  {
                    ArrayList nodeList = new60();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 61:
                  {
                    ArrayList nodeList = new61();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 62:
                  {
                    ArrayList nodeList = new62();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 63:
                  {
                    ArrayList nodeList = new63();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 64:
                  {
                    ArrayList nodeList = new64();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 65:
                  {
                    ArrayList nodeList = new65();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 66:
                  {
                    ArrayList nodeList = new66();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 67:
                  {
                    ArrayList nodeList = new67();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 68:
                  {
                    ArrayList nodeList = new68();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 69:
                  {
                    ArrayList nodeList = new69();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 70:
                  {
                    ArrayList nodeList = new70();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 71:
                  {
                    ArrayList nodeList = new71();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 72:
                  {
                    ArrayList nodeList = new72();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 73:
                  {
                    ArrayList nodeList = new73();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 74:
                  {
                    ArrayList nodeList = new74();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 75:
                  {
                    ArrayList nodeList = new75();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 76:
                  {
                    ArrayList nodeList = new76();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 77:
                  {
                    ArrayList nodeList = new77();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 78:
                  {
                    ArrayList nodeList = new78();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 79:
                  {
                    ArrayList nodeList = new79();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 80:
                  {
                    ArrayList nodeList = new80();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 81:
                  {
                    ArrayList nodeList = new81();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 82:
                  {
                    ArrayList nodeList = new82();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 83:
                  {
                    ArrayList nodeList = new83();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 84:
                  {
                    ArrayList nodeList = new84();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 85:
                  {
                    ArrayList nodeList = new85();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 86:
                  {
                    ArrayList nodeList = new86();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 87:
                  {
                    ArrayList nodeList = new87();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 88:
                  {
                    ArrayList nodeList = new88();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 89:
                  {
                    ArrayList nodeList = new89();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 90:
                  {
                    ArrayList nodeList = new90();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 91:
                  {
                    ArrayList nodeList = new91();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 92:
                  {
                    ArrayList nodeList = new92();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 93:
                  {
                    ArrayList nodeList = new93();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 94:
                  {
                    ArrayList nodeList = new94();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 95:
                  {
                    ArrayList nodeList = new95();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 96:
                  {
                    ArrayList nodeList = new96();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 97:
                  {
                    ArrayList nodeList = new97();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 98:
                  {
                    ArrayList nodeList = new98();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 99:
                  {
                    ArrayList nodeList = new99();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 100:
                  {
                    ArrayList nodeList = new100();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 101:
                  {
                    ArrayList nodeList = new101();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 102:
                  {
                    ArrayList nodeList = new102();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 103:
                  {
                    ArrayList nodeList = new103();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 104:
                  {
                    ArrayList nodeList = new104();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 105:
                  {
                    ArrayList nodeList = new105();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 106:
                  {
                    ArrayList nodeList = new106();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 107:
                  {
                    ArrayList nodeList = new107();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 108:
                  {
                    ArrayList nodeList = new108();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 109:
                  {
                    ArrayList nodeList = new109();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 110:
                  {
                    ArrayList nodeList = new110();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 111:
                  {
                    ArrayList nodeList = new111();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 112:
                  {
                    ArrayList nodeList = new112();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 113:
                  {
                    ArrayList nodeList = new113();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 114:
                  {
                    ArrayList nodeList = new114();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 115:
                  {
                    ArrayList nodeList = new115();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 116:
                  {
                    ArrayList nodeList = new116();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 117:
                  {
                    ArrayList nodeList = new117();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 118:
                  {
                    ArrayList nodeList = new118();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 119:
                  {
                    ArrayList nodeList = new119();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 120:
                  {
                    ArrayList nodeList = new120();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 121:
                  {
                    ArrayList nodeList = new121();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 122:
                  {
                    ArrayList nodeList = new122();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 123:
                  {
                    ArrayList nodeList = new123();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 124:
                  {
                    ArrayList nodeList = new124();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 125:
                  {
                    ArrayList nodeList = new125();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 126:
                  {
                    ArrayList nodeList = new126();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 127:
                  {
                    ArrayList nodeList = new127();
                    push(goTo(0), nodeList);
                    break;
                  }
                  case 128:
                  {
                    ArrayList nodeList = new128();
                    push(goTo(1), nodeList);
                    break;
                  }
                  case 129:
                  {
                    ArrayList nodeList = new129();
                    push(goTo(2), nodeList);
                    break;
                  }
                  case 130:
                  {
                    ArrayList nodeList = new130();
                    push(goTo(2), nodeList);
                    break;
                  }
                  case 131:
                  {
                    ArrayList nodeList = new131();
                    push(goTo(3), nodeList);
                    break;
                  }
                  case 132:
                  {
                    ArrayList nodeList = new132();
                    push(goTo(4), nodeList);
                    break;
                  }
                  case 133:
                  {
                    ArrayList nodeList = new133();
                    push(goTo(5), nodeList);
                    break;
                  }
                  case 134:
                  {
                    ArrayList nodeList = new134();
                    push(goTo(6), nodeList);
                    break;
                  }
                  case 135:
                  {
                    ArrayList nodeList = new135();
                    push(goTo(7), nodeList);
                    break;
                  }
                  case 136:
                  {
                    ArrayList nodeList = new136();
                    push(goTo(7), nodeList);
                    break;
                  }
                  case 137:
                  {
                    ArrayList nodeList = new137();
                    push(goTo(8), nodeList);
                    break;
                  }
                  case 138:
                  {
                    ArrayList nodeList = new138();
                    push(goTo(9), nodeList);
                    break;
                  }
                  case 139:
                  {
                    ArrayList nodeList = new139();
                    push(goTo(10), nodeList);
                    break;
                  }
                  case 140:
                  {
                    ArrayList nodeList = new140();
                    push(goTo(10), nodeList);
                    break;
                  }
                  case 141:
                  {
                    ArrayList nodeList = new141();
                    push(goTo(10), nodeList);
                    break;
                  }
                  case 142:
                  {
                    ArrayList nodeList = new142();
                    push(goTo(10), nodeList);
                    break;
                  }
                  case 143:
                  {
                    ArrayList nodeList = new143();
                    push(goTo(11), nodeList);
                    break;
                  }
                  case 144:
                  {
                    ArrayList nodeList = new144();
                    push(goTo(11), nodeList);
                    break;
                  }
                  case 145:
                  {
                    ArrayList nodeList = new145();
                    push(goTo(11), nodeList);
                    break;
                  }
                  case 146:
                  {
                    ArrayList nodeList = new146();
                    push(goTo(11), nodeList);
                    break;
                  }
                  case 147:
                  {
                    ArrayList nodeList = new147();
                    push(goTo(12), nodeList);
                    break;
                  }
                  case 148:
                  {
                    ArrayList nodeList = new148();
                    push(goTo(12), nodeList);
                    break;
                  }
                  case 149:
                  {
                    ArrayList nodeList = new149();
                    push(goTo(13), nodeList);
                    break;
                  }
                  case 150:
                  {
                    ArrayList nodeList = new150();
                    push(goTo(14), nodeList);
                    break;
                  }
                  case 151:
                  {
                    ArrayList nodeList = new151();
                    push(goTo(14), nodeList);
                    break;
                  }
                  case 152:
                  {
                    ArrayList nodeList = new152();
                    push(goTo(15), nodeList);
                    break;
                  }
                  case 153:
                  {
                    ArrayList nodeList = new153();
                    push(goTo(16), nodeList);
                    break;
                  }
                  case 154:
                  {
                    ArrayList nodeList = new154();
                    push(goTo(16), nodeList);
                    break;
                  }
                  case 155:
                  {
                    ArrayList nodeList = new155();
                    push(goTo(17), nodeList);
                    break;
                  }
                  case 156:
                  {
                    ArrayList nodeList = new156();
                    push(goTo(18), nodeList);
                    break;
                  }
                  case 157:
                  {
                    ArrayList nodeList = new157();
                    push(goTo(18), nodeList);
                    break;
                  }
                  case 158:
                  {
                    ArrayList nodeList = new158();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 159:
                  {
                    ArrayList nodeList = new159();
                    push(goTo(19), nodeList);
                    break;
                  }
                  case 160:
                  {
                    ArrayList nodeList = new160();
                    push(goTo(20), nodeList);
                    break;
                  }
                  case 161:
                  {
                    ArrayList nodeList = new161();
                    push(goTo(20), nodeList);
                    break;
                  }
                  case 162:
                  {
                    ArrayList nodeList = new162();
                    push(goTo(20), nodeList);
                    break;
                  }
                  case 163:
                  {
                    ArrayList nodeList = new163();
                    push(goTo(20), nodeList);
                    break;
                  }
                  case 164:
                  {
                    ArrayList nodeList = new164();
                    push(goTo(20), nodeList);
                    break;
                  }
                  case 165:
                  {
                    ArrayList nodeList = new165();
                    push(goTo(21), nodeList);
                    break;
                  }
                  case 166:
                  {
                    ArrayList nodeList = new166();
                    push(goTo(21), nodeList);
                    break;
                  }
                  case 167:
                  {
                    ArrayList nodeList = new167();
                    push(goTo(21), nodeList);
                    break;
                  }
                  case 168:
                  {
                    ArrayList nodeList = new168();
                    push(goTo(22), nodeList);
                    break;
                  }
                  case 169:
                  {
                    ArrayList nodeList = new169();
                    push(goTo(22), nodeList);
                    break;
                  }
                  case 170:
                  {
                    ArrayList nodeList = new170();
                    push(goTo(23), nodeList);
                    break;
                  }
                  case 171:
                  {
                    ArrayList nodeList = new171();
                    push(goTo(23), nodeList);
                    break;
                  }
                  case 172:
                  {
                    ArrayList nodeList = new172();
                    push(goTo(23), nodeList);
                    break;
                  }
                  case 173:
                  {
                    ArrayList nodeList = new173();
                    push(goTo(24), nodeList);
                    break;
                  }
                  case 174:
                  {
                    ArrayList nodeList = new174();
                    push(goTo(24), nodeList);
                    break;
                  }
                  case 175:
                  {
                    ArrayList nodeList = new175();
                    push(goTo(25), nodeList);
                    break;
                  }
                  case 176:
                  {
                    ArrayList nodeList = new176();
                    push(goTo(26), nodeList);
                    break;
                  }
                  case 177:
                  {
                    ArrayList nodeList = new177();
                    push(goTo(26), nodeList);
                    break;
                  }
                  case 178:
                  {
                    ArrayList nodeList = new178();
                    push(goTo(27), nodeList);
                    break;
                  }
                  case 179:
                  {
                    ArrayList nodeList = new179();
                    push(goTo(27), nodeList);
                    break;
                  }
                  case 180:
                  {
                    ArrayList nodeList = new180();
                    push(goTo(28), nodeList);
                    break;
                  }
                  case 181:
                  {
                    ArrayList nodeList = new181();
                    push(goTo(28), nodeList);
                    break;
                  }
                  case 182:
                  {
                    ArrayList nodeList = new182();
                    push(goTo(29), nodeList);
                    break;
                  }
                  case 183:
                  {
                    ArrayList nodeList = new183();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 184:
                  {
                    ArrayList nodeList = new184();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 185:
                  {
                    ArrayList nodeList = new185();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 186:
                  {
                    ArrayList nodeList = new186();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 187:
                  {
                    ArrayList nodeList = new187();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 188:
                  {
                    ArrayList nodeList = new188();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 189:
                  {
                    ArrayList nodeList = new189();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 190:
                  {
                    ArrayList nodeList = new190();
                    push(goTo(30), nodeList);
                    break;
                  }
                  case 191:
                  {
                    ArrayList nodeList = new191();
                    push(goTo(31), nodeList);
                    break;
                  }
                  case 192:
                  {
                    ArrayList nodeList = new192();
                    push(goTo(31), nodeList);
                    break;
                  }
                  case 193:
                  {
                    ArrayList nodeList = new193();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 194:
                  {
                    ArrayList nodeList = new194();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 195:
                  {
                    ArrayList nodeList = new195();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 196:
                  {
                    ArrayList nodeList = new196();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 197:
                  {
                    ArrayList nodeList = new197();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 198:
                  {
                    ArrayList nodeList = new198();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 199:
                  {
                    ArrayList nodeList = new199();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 200:
                  {
                    ArrayList nodeList = new200();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 201:
                  {
                    ArrayList nodeList = new201();
                    push(goTo(32), nodeList);
                    break;
                  }
                  case 202:
                  {
                    ArrayList nodeList = new202();
                    push(goTo(33), nodeList);
                    break;
                  }
                  case 203:
                  {
                    ArrayList nodeList = new203();
                    push(goTo(33), nodeList);
                    break;
                  }
                  case 204:
                  {
                    ArrayList nodeList = new204();
                    push(goTo(34), nodeList);
                    break;
                  }
                  case 205:
                  {
                    ArrayList nodeList = new205();
                    push(goTo(34), nodeList);
                    break;
                  }
                  case 206:
                  {
                    ArrayList nodeList = new206();
                    push(goTo(34), nodeList);
                    break;
                  }
                  case 207:
                  {
                    ArrayList nodeList = new207();
                    push(goTo(34), nodeList);
                    break;
                  }
                  case 208:
                  {
                    ArrayList nodeList = new208();
                    push(goTo(34), nodeList);
                    break;
                  }
                  case 209:
                  {
                    ArrayList nodeList = new209();
                    push(goTo(34), nodeList);
                    break;
                  }
                  case 210:
                  {
                    ArrayList nodeList = new210();
                    push(goTo(35), nodeList);
                    break;
                  }
                  case 211:
                  {
                    ArrayList nodeList = new211();
                    push(goTo(36), nodeList);
                    break;
                  }
                  case 212:
                  {
                    ArrayList nodeList = new212();
                    push(goTo(37), nodeList);
                    break;
                  }
                  case 213:
                  {
                    ArrayList nodeList = new213();
                    push(goTo(37), nodeList);
                    break;
                  }
                  case 214:
                  {
                    ArrayList nodeList = new214();
                    push(goTo(38), nodeList);
                    break;
                  }
                  case 215:
                  {
                    ArrayList nodeList = new215();
                    push(goTo(39), nodeList);
                    break;
                  }
                  case 216:
                  {
                    ArrayList nodeList = new216();
                    push(goTo(39), nodeList);
                    break;
                  }
                  case 217:
                  {
                    ArrayList nodeList = new217();
                    push(goTo(40), nodeList);
                    break;
                  }
                  case 218:
                  {
                    ArrayList nodeList = new218();
                    push(goTo(41), nodeList);
                    break;
                  }
                  case 219:
                  {
                    ArrayList nodeList = new219();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 220:
                  {
                    ArrayList nodeList = new220();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 221:
                  {
                    ArrayList nodeList = new221();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 222:
                  {
                    ArrayList nodeList = new222();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 223:
                  {
                    ArrayList nodeList = new223();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 224:
                  {
                    ArrayList nodeList = new224();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 225:
                  {
                    ArrayList nodeList = new225();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 226:
                  {
                    ArrayList nodeList = new226();
                    push(goTo(42), nodeList);
                    break;
                  }
                  case 227:
                  {
                    ArrayList nodeList = new227();
                    push(goTo(43), nodeList);
                    break;
                  }
                  case 228:
                  {
                    ArrayList nodeList = new228();
                    push(goTo(44), nodeList);
                    break;
                  }
                  case 229:
                  {
                    ArrayList nodeList = new229();
                    push(goTo(44), nodeList);
                    break;
                  }
                  case 230:
                  {
                    ArrayList nodeList = new230();
                    push(goTo(45), nodeList);
                    break;
                  }
                  case 231:
                  {
                    ArrayList nodeList = new231();
                    push(goTo(46), nodeList);
                    break;
                  }
                  case 232:
                  {
                    ArrayList nodeList = new232();
                    push(goTo(47), nodeList);
                    break;
                  }
                  case 233:
                  {
                    ArrayList nodeList = new233();
                    push(goTo(47), nodeList);
                    break;
                  }
                  case 234:
                  {
                    ArrayList nodeList = new234();
                    push(goTo(48), nodeList);
                    break;
                  }
                  case 235:
                  {
                    ArrayList nodeList = new235();
                    push(goTo(49), nodeList);
                    break;
                  }
                  case 236:
                  {
                    ArrayList nodeList = new236();
                    push(goTo(49), nodeList);
                    break;
                  }
                  case 237:
                  {
                    ArrayList nodeList = new237();
                    push(goTo(49), nodeList);
                    break;
                  }
                  case 238:
                  {
                    ArrayList nodeList = new238();
                    push(goTo(49), nodeList);
                    break;
                  }
                  case 239:
                  {
                    ArrayList nodeList = new239();
                    push(goTo(50), nodeList);
                    break;
                  }
                  case 240:
                  {
                    ArrayList nodeList = new240();
                    push(goTo(50), nodeList);
                    break;
                  }
                  case 241:
                  {
                    ArrayList nodeList = new241();
                    push(goTo(51), nodeList);
                    break;
                  }
                  case 242:
                  {
                    ArrayList nodeList = new242();
                    push(goTo(51), nodeList);
                    break;
                  }
                  case 243:
                  {
                    ArrayList nodeList = new243();
                    push(goTo(52), nodeList);
                    break;
                  }
                  case 244:
                  {
                    ArrayList nodeList = new244();
                    push(goTo(52), nodeList);
                    break;
                  }
                  case 245:
                  {
                    ArrayList nodeList = new245();
                    push(goTo(53), nodeList);
                    break;
                  }
                  case 246:
                  {
                    ArrayList nodeList = new246();
                    push(goTo(53), nodeList);
                    break;
                  }
                  case 247:
                  {
                    ArrayList nodeList = new247();
                    push(goTo(54), nodeList);
                    break;
                  }
                  case 248:
                  {
                    ArrayList nodeList = new248();
                    push(goTo(54), nodeList);
                    break;
                  }
                  case 249:
                  {
                    ArrayList nodeList = new249();
                    push(goTo(55), nodeList);
                    break;
                  }
                  case 250:
                  {
                    ArrayList nodeList = new250();
                    push(goTo(55), nodeList);
                    break;
                  }
                  case 251:
                  {
                    ArrayList nodeList = new251();
                    push(goTo(56), nodeList);
                    break;
                  }
                  case 252:
                  {
                    ArrayList nodeList = new252();
                    push(goTo(56), nodeList);
                    break;
                  }
                  case 253:
                  {
                    ArrayList nodeList = new253();
                    push(goTo(57), nodeList);
                    break;
                  }
                  case 254:
                  {
                    ArrayList nodeList = new254();
                    push(goTo(57), nodeList);
                    break;
                  }
                  case 255:
                  {
                    ArrayList nodeList = new255();
                    push(goTo(58), nodeList);
                    break;
                  }
                  case 256:
                  {
                    ArrayList nodeList = new256();
                    push(goTo(58), nodeList);
                    break;
                  }
                  case 257:
                  {
                    ArrayList nodeList = new257();
                    push(goTo(59), nodeList);
                    break;
                  }
                  case 258:
                  {
                    ArrayList nodeList = new258();
                    push(goTo(59), nodeList);
                    break;
                  }
                  case 259:
                  {
                    ArrayList nodeList = new259();
                    push(goTo(60), nodeList);
                    break;
                  }
                  case 260:
                  {
                    ArrayList nodeList = new260();
                    push(goTo(60), nodeList);
                    break;
                  }
                  case 261:
                  {
                    ArrayList nodeList = new261();
                    push(goTo(61), nodeList);
                    break;
                  }
                  case 262:
                  {
                    ArrayList nodeList = new262();
                    push(goTo(61), nodeList);
                    break;
                  }
                  case 263:
                  {
                    ArrayList nodeList = new263();
                    push(goTo(62), nodeList);
                    break;
                  }
                  case 264:
                  {
                    ArrayList nodeList = new264();
                    push(goTo(62), nodeList);
                    break;
                  }
                  case 265:
                  {
                    ArrayList nodeList = new265();
                    push(goTo(63), nodeList);
                    break;
                  }
                  case 266:
                  {
                    ArrayList nodeList = new266();
                    push(goTo(63), nodeList);
                    break;
                  }
                  case 267:
                  {
                    ArrayList nodeList = new267();
                    push(goTo(64), nodeList);
                    break;
                  }
                  case 268:
                  {
                    ArrayList nodeList = new268();
                    push(goTo(64), nodeList);
                    break;
                  }
                }
                break;
              }
              case ACCEPT:
              {
                EOF node2 = (EOF) lexer.next();
                PGrammar node1 = (PGrammar) ((ArrayList)pop()).get(0);
                Start node = new Start(node1, node2);
                return node;
              }
              case ERROR:
                throw new ParserException(last_token,
                  "[" + last_line + "," + last_pos + "] " +
                  errorMessages[errors[action[1]]]);
            }
        }
    }

    ArrayList new0()
    {
        ArrayList nodeList = new ArrayList(1);
        TypedLinkedList listNode2 = new TypedLinkedList();
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              null,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new1()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              null,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new2()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              null,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new3()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              null,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new4()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              null,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new5()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              null,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new6()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              null,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new7()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              null,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new8()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokens ptokensNode5 = (PTokens)nodeArrayList1.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              ptokensNode5,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new9()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PTokens ptokensNode6 = (PTokens)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              ptokensNode6,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new10()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              ptokensNode5,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new11()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              ptokensNode6,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new12()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              ptokensNode5,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new13()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              ptokensNode6,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new14()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              ptokensNode5,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new15()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              ptokensNode6,
              null,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new16()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList1.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              null,
              pigntokensNode6,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new17()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              null,
              pigntokensNode7,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new18()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              null,
              pigntokensNode6,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new19()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              null,
              pigntokensNode7,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new20()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              null,
              pigntokensNode6,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new21()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              null,
              pigntokensNode7,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new22()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              null,
              pigntokensNode6,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new23()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              null,
              pigntokensNode7,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new24()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokens ptokensNode5 = (PTokens)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              ptokensNode5,
              pigntokensNode6,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new25()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PTokens ptokensNode6 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              ptokensNode6,
              pigntokensNode7,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new26()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              ptokensNode5,
              pigntokensNode6,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new27()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              ptokensNode6,
              pigntokensNode7,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new28()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              ptokensNode5,
              pigntokensNode6,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new29()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              ptokensNode6,
              pigntokensNode7,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new30()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              ptokensNode5,
              pigntokensNode6,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new31()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList4.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              ptokensNode6,
              pigntokensNode7,
              null,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new32()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PProductions pproductionsNode7 = (PProductions)nodeArrayList1.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              null,
              null,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new33()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PProductions pproductionsNode8 = (PProductions)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              null,
              null,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new34()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              null,
              null,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new35()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              null,
              null,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new36()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              null,
              null,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new37()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              null,
              null,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new38()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              null,
              null,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new39()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              null,
              null,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new40()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokens ptokensNode5 = (PTokens)nodeArrayList1.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              ptokensNode5,
              null,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new41()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PTokens ptokensNode6 = (PTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              ptokensNode6,
              null,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new42()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              ptokensNode5,
              null,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new43()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              ptokensNode6,
              null,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new44()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              ptokensNode5,
              null,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new45()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              ptokensNode6,
              null,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new46()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              ptokensNode5,
              null,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new47()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              ptokensNode6,
              null,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new48()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList1.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              null,
              pigntokensNode6,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new49()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              null,
              pigntokensNode7,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new50()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              null,
              pigntokensNode6,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new51()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              null,
              pigntokensNode7,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new52()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              null,
              pigntokensNode6,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new53()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              null,
              pigntokensNode7,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new54()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              null,
              pigntokensNode6,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new55()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              null,
              pigntokensNode7,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new56()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokens ptokensNode5 = (PTokens)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              ptokensNode5,
              pigntokensNode6,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new57()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PTokens ptokensNode6 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              ptokensNode6,
              pigntokensNode7,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new58()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              ptokensNode5,
              pigntokensNode6,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new59()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              ptokensNode6,
              pigntokensNode7,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new60()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              ptokensNode5,
              pigntokensNode6,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new61()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              ptokensNode6,
              pigntokensNode7,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new62()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              ptokensNode5,
              pigntokensNode6,
              pproductionsNode7,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new63()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList4.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList5.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList6.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              ptokensNode6,
              pigntokensNode7,
              pproductionsNode8,
              null
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new64()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PAst pastNode8 = (PAst)nodeArrayList1.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              null,
              null,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new65()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PAst pastNode9 = (PAst)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              null,
              null,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new66()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PAst pastNode8 = (PAst)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              null,
              null,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new67()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PAst pastNode9 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              null,
              null,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new68()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PAst pastNode8 = (PAst)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              null,
              null,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new69()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PAst pastNode9 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              null,
              null,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new70()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              null,
              null,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new71()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              null,
              null,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new72()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokens ptokensNode5 = (PTokens)nodeArrayList1.get(0);
        PAst pastNode8 = (PAst)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              ptokensNode5,
              null,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new73()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PTokens ptokensNode6 = (PTokens)nodeArrayList2.get(0);
        PAst pastNode9 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              ptokensNode6,
              null,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new74()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              ptokensNode5,
              null,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new75()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              ptokensNode6,
              null,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new76()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              ptokensNode5,
              null,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new77()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              ptokensNode6,
              null,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new78()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              ptokensNode5,
              null,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new79()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              ptokensNode6,
              null,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new80()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList1.get(0);
        PAst pastNode8 = (PAst)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              null,
              pigntokensNode6,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new81()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList2.get(0);
        PAst pastNode9 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              null,
              pigntokensNode7,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new82()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              null,
              pigntokensNode6,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new83()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              null,
              pigntokensNode7,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new84()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              null,
              pigntokensNode6,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new85()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              null,
              pigntokensNode7,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new86()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              null,
              pigntokensNode6,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new87()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              null,
              pigntokensNode7,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new88()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokens ptokensNode5 = (PTokens)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              ptokensNode5,
              pigntokensNode6,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new89()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PTokens ptokensNode6 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              ptokensNode6,
              pigntokensNode7,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new90()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              ptokensNode5,
              pigntokensNode6,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new91()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              ptokensNode6,
              pigntokensNode7,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new92()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              ptokensNode5,
              pigntokensNode6,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new93()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              ptokensNode6,
              pigntokensNode7,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new94()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList4.get(0);
        PAst pastNode8 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              ptokensNode5,
              pigntokensNode6,
              null,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new95()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList4.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList5.get(0);
        PAst pastNode9 = (PAst)nodeArrayList6.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              ptokensNode6,
              pigntokensNode7,
              null,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new96()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PProductions pproductionsNode7 = (PProductions)nodeArrayList1.get(0);
        PAst pastNode8 = (PAst)nodeArrayList2.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              null,
              null,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new97()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PProductions pproductionsNode8 = (PProductions)nodeArrayList2.get(0);
        PAst pastNode9 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              null,
              null,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new98()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              null,
              null,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new99()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              null,
              null,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new100()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              null,
              null,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new101()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              null,
              null,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new102()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              null,
              null,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new103()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              null,
              null,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new104()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokens ptokensNode5 = (PTokens)nodeArrayList1.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              ptokensNode5,
              null,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new105()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PTokens ptokensNode6 = (PTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              ptokensNode6,
              null,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new106()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              ptokensNode5,
              null,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new107()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              ptokensNode6,
              null,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new108()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              ptokensNode5,
              null,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new109()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              ptokensNode6,
              null,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new110()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode8 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              ptokensNode5,
              null,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new111()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList5.get(0);
        PAst pastNode9 = (PAst)nodeArrayList6.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              ptokensNode6,
              null,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new112()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList1.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList2.get(0);
        PAst pastNode8 = (PAst)nodeArrayList3.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              null,
              pigntokensNode6,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new113()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode9 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              null,
              pigntokensNode7,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new114()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              null,
              pigntokensNode6,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new115()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              null,
              pigntokensNode7,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new116()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              null,
              pigntokensNode6,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new117()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              null,
              pigntokensNode7,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new118()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode8 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              null,
              pigntokensNode6,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new119()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList5.get(0);
        PAst pastNode9 = (PAst)nodeArrayList6.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              null,
              pigntokensNode7,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new120()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokens ptokensNode5 = (PTokens)nodeArrayList1.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList2.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList3.get(0);
        PAst pastNode8 = (PAst)nodeArrayList4.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              null,
              ptokensNode5,
              pigntokensNode6,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new121()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PTokens ptokensNode6 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode9 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              null,
              ptokensNode6,
              pigntokensNode7,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new122()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode8 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              null,
              ptokensNode5,
              pigntokensNode6,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new123()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList5.get(0);
        PAst pastNode9 = (PAst)nodeArrayList6.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              null,
              ptokensNode6,
              pigntokensNode7,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new124()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStates pstatesNode4 = (PStates)nodeArrayList1.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList2.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList3.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList4.get(0);
        PAst pastNode8 = (PAst)nodeArrayList5.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              null,
              pstatesNode4,
              ptokensNode5,
              pigntokensNode6,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new125()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PStates pstatesNode5 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList5.get(0);
        PAst pastNode9 = (PAst)nodeArrayList6.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              null,
              pstatesNode5,
              ptokensNode6,
              pigntokensNode7,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new126()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelpers phelpersNode3 = (PHelpers)nodeArrayList1.get(0);
        PStates pstatesNode4 = (PStates)nodeArrayList2.get(0);
        PTokens ptokensNode5 = (PTokens)nodeArrayList3.get(0);
        PIgnTokens pigntokensNode6 = (PIgnTokens)nodeArrayList4.get(0);
        PProductions pproductionsNode7 = (PProductions)nodeArrayList5.get(0);
        PAst pastNode8 = (PAst)nodeArrayList6.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode2,
              phelpersNode3,
              pstatesNode4,
              ptokensNode5,
              pigntokensNode6,
              pproductionsNode7,
              pastNode8
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new127()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        PHelpers phelpersNode4 = (PHelpers)nodeArrayList2.get(0);
        PStates pstatesNode5 = (PStates)nodeArrayList3.get(0);
        PTokens ptokensNode6 = (PTokens)nodeArrayList4.get(0);
        PIgnTokens pigntokensNode7 = (PIgnTokens)nodeArrayList5.get(0);
        PProductions pproductionsNode8 = (PProductions)nodeArrayList6.get(0);
        PAst pastNode9 = (PAst)nodeArrayList7.get(0);
        AGrammar pgrammarNode1 = new AGrammar (
              listNode3,
              phelpersNode4,
              pstatesNode5,
              ptokensNode6,
              pigntokensNode7,
              pproductionsNode8,
              pastNode9
        );
        nodeList.add(pgrammarNode1);
        return nodeList;
    }
    ArrayList new128()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode2.addAll(listNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new129()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        TPkgId tpkgidNode1 = (TPkgId)nodeArrayList1.get(0);
        if ( tpkgidNode1 != null )
        {
            listNode2.add(tpkgidNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new130()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TPkgId tpkgidNode1 = (TPkgId)nodeArrayList1.get(0);
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( tpkgidNode1 != null )
        {
            listNode3.add(tpkgidNode1);
        }
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new131()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TPkgId tpkgidNode1 = (TPkgId)nodeArrayList2.get(0);
        nodeList.add(tpkgidNode1);
        return nodeList;
    }
    ArrayList new132()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        AHelpers phelpersNode1 = new AHelpers (
              listNode3
        );
        nodeList.add(phelpersNode1);
        return nodeList;
    }
    ArrayList new133()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        PRegExp pregexpNode3 = (PRegExp)nodeArrayList3.get(0);
        AHelperDef phelperdefNode1 = new AHelperDef (
              tidNode2,
              pregexpNode3
        );
        nodeList.add(phelperdefNode1);
        return nodeList;
    }
    ArrayList new134()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        AStates pstatesNode1 = new AStates (
              listNode3
        );
        nodeList.add(pstatesNode1);
        return nodeList;
    }
    ArrayList new135()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        TId tidNode1 = (TId)nodeArrayList1.get(0);
        if ( tidNode1 != null )
        {
            listNode2.add(tidNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new136()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TId tidNode1 = (TId)nodeArrayList1.get(0);
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( tidNode1 != null )
        {
            listNode3.add(tidNode1);
        }
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new137()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode1 = (TId)nodeArrayList2.get(0);
        nodeList.add(tidNode1);
        return nodeList;
    }
    ArrayList new138()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        ATokens ptokensNode1 = new ATokens (
              listNode3
        );
        nodeList.add(ptokensNode1);
        return nodeList;
    }
    ArrayList new139()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode3 = (TId)nodeArrayList1.get(0);
        PRegExp pregexpNode4 = (PRegExp)nodeArrayList3.get(0);
        ATokenDef ptokendefNode1 = new ATokenDef (
              null,
              tidNode3,
              pregexpNode4,
              null,
              null
        );
        nodeList.add(ptokendefNode1);
        return nodeList;
    }
    ArrayList new140()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PStateList pstatelistNode2 = (PStateList)nodeArrayList1.get(0);
        TId tidNode3 = (TId)nodeArrayList2.get(0);
        PRegExp pregexpNode4 = (PRegExp)nodeArrayList4.get(0);
        ATokenDef ptokendefNode1 = new ATokenDef (
              pstatelistNode2,
              tidNode3,
              pregexpNode4,
              null,
              null
        );
        nodeList.add(ptokendefNode1);
        return nodeList;
    }
    ArrayList new141()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode3 = (TId)nodeArrayList1.get(0);
        PRegExp pregexpNode4 = (PRegExp)nodeArrayList3.get(0);
        TSlash tslashNode5 = (TSlash)nodeArrayList4.get(0);
        PRegExp pregexpNode6 = (PRegExp)nodeArrayList4.get(1);
        ATokenDef ptokendefNode1 = new ATokenDef (
              null,
              tidNode3,
              pregexpNode4,
              tslashNode5,
              pregexpNode6
        );
        nodeList.add(ptokendefNode1);
        return nodeList;
    }
    ArrayList new142()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PStateList pstatelistNode2 = (PStateList)nodeArrayList1.get(0);
        TId tidNode3 = (TId)nodeArrayList2.get(0);
        PRegExp pregexpNode4 = (PRegExp)nodeArrayList4.get(0);
        TSlash tslashNode5 = (TSlash)nodeArrayList5.get(0);
        PRegExp pregexpNode6 = (PRegExp)nodeArrayList5.get(1);
        ATokenDef ptokendefNode1 = new ATokenDef (
              pstatelistNode2,
              tidNode3,
              pregexpNode4,
              tslashNode5,
              pregexpNode6
        );
        nodeList.add(ptokendefNode1);
        return nodeList;
    }
    ArrayList new143()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList2.get(0);
        AStateList pstatelistNode1 = new AStateList (
              tidNode2,
              null,
              listNode4
        );
        nodeList.add(pstatelistNode1);
        return nodeList;
    }
    ArrayList new144()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList2.get(0);
        PTransition ptransitionNode3 = (PTransition)nodeArrayList3.get(0);
        AStateList pstatelistNode1 = new AStateList (
              tidNode2,
              ptransitionNode3,
              listNode4
        );
        nodeList.add(pstatelistNode1);
        return nodeList;
    }
    ArrayList new145()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList2.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        AStateList pstatelistNode1 = new AStateList (
              tidNode2,
              null,
              listNode5
        );
        nodeList.add(pstatelistNode1);
        return nodeList;
    }
    ArrayList new146()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList2.get(0);
        PTransition ptransitionNode3 = (PTransition)nodeArrayList3.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        AStateList pstatelistNode1 = new AStateList (
              tidNode2,
              ptransitionNode3,
              listNode5
        );
        nodeList.add(pstatelistNode1);
        return nodeList;
    }
    ArrayList new147()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList2.get(0);
        AStateListTail pstatelisttailNode1 = new AStateListTail (
              tidNode2,
              null
        );
        nodeList.add(pstatelisttailNode1);
        return nodeList;
    }
    ArrayList new148()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList2.get(0);
        PTransition ptransitionNode3 = (PTransition)nodeArrayList3.get(0);
        AStateListTail pstatelisttailNode1 = new AStateListTail (
              tidNode2,
              ptransitionNode3
        );
        nodeList.add(pstatelisttailNode1);
        return nodeList;
    }
    ArrayList new149()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList2.get(0);
        ATransition ptransitionNode1 = new ATransition (
              tidNode2
        );
        nodeList.add(ptransitionNode1);
        return nodeList;
    }
    ArrayList new150()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        AIgnTokens pigntokensNode1 = new AIgnTokens (
              listNode2
        );
        nodeList.add(pigntokensNode1);
        return nodeList;
    }
    ArrayList new151()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        AIgnTokens pigntokensNode1 = new AIgnTokens (
              listNode3
        );
        nodeList.add(pigntokensNode1);
        return nodeList;
    }
    ArrayList new152()
    {
        ArrayList nodeList = new ArrayList(2);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TSlash tslashNode1 = (TSlash)nodeArrayList1.get(0);
        PRegExp pregexpNode2 = (PRegExp)nodeArrayList2.get(0);
        nodeList.add(tslashNode1);
        nodeList.add(pregexpNode2);
        return nodeList;
    }
    ArrayList new153()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        PConcat pconcatNode2 = (PConcat)nodeArrayList1.get(0);
        if ( pconcatNode2 != null )
        {
            listNode3.add(pconcatNode2);
        }
        ARegExp pregexpNode1 = new ARegExp (
              listNode3
        );
        nodeList.add(pregexpNode1);
        return nodeList;
    }
    ArrayList new154()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        PConcat pconcatNode2 = (PConcat)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( pconcatNode2 != null )
        {
            listNode4.add(pconcatNode2);
        }
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        ARegExp pregexpNode1 = new ARegExp (
              listNode4
        );
        nodeList.add(pregexpNode1);
        return nodeList;
    }
    ArrayList new155()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PConcat pconcatNode1 = (PConcat)nodeArrayList2.get(0);
        nodeList.add(pconcatNode1);
        return nodeList;
    }
    ArrayList new156()
    {
        ArrayList nodeList = new ArrayList(1);
        TypedLinkedList listNode2 = new TypedLinkedList();
        AConcat pconcatNode1 = new AConcat (
              listNode2
        );
        nodeList.add(pconcatNode1);
        return nodeList;
    }
    ArrayList new157()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        AConcat pconcatNode1 = new AConcat (
              listNode3
        );
        nodeList.add(pconcatNode1);
        return nodeList;
    }
    ArrayList new158()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PBasic pbasicNode2 = (PBasic)nodeArrayList1.get(0);
        AUnExp punexpNode1 = new AUnExp (
              pbasicNode2,
              null
        );
        nodeList.add(punexpNode1);
        return nodeList;
    }
    ArrayList new159()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PBasic pbasicNode2 = (PBasic)nodeArrayList1.get(0);
        PUnOp punopNode3 = (PUnOp)nodeArrayList2.get(0);
        AUnExp punexpNode1 = new AUnExp (
              pbasicNode2,
              punopNode3
        );
        nodeList.add(punexpNode1);
        return nodeList;
    }
    ArrayList new160()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PChar pcharNode2 = (PChar)nodeArrayList1.get(0);
        ACharBasic pbasicNode1 = new ACharBasic (
              pcharNode2
        );
        nodeList.add(pbasicNode1);
        return nodeList;
    }
    ArrayList new161()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSet psetNode2 = (PSet)nodeArrayList1.get(0);
        ASetBasic pbasicNode1 = new ASetBasic (
              psetNode2
        );
        nodeList.add(pbasicNode1);
        return nodeList;
    }
    ArrayList new162()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TString tstringNode2 = (TString)nodeArrayList1.get(0);
        AStringBasic pbasicNode1 = new AStringBasic (
              tstringNode2
        );
        nodeList.add(pbasicNode1);
        return nodeList;
    }
    ArrayList new163()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        AIdBasic pbasicNode1 = new AIdBasic (
              tidNode2
        );
        nodeList.add(pbasicNode1);
        return nodeList;
    }
    ArrayList new164()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PRegExp pregexpNode2 = (PRegExp)nodeArrayList2.get(0);
        ARegExpBasic pbasicNode1 = new ARegExpBasic (
              pregexpNode2
        );
        nodeList.add(pbasicNode1);
        return nodeList;
    }
    ArrayList new165()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TChar tcharNode2 = (TChar)nodeArrayList1.get(0);
        ACharChar pcharNode1 = new ACharChar (
              tcharNode2
        );
        nodeList.add(pcharNode1);
        return nodeList;
    }
    ArrayList new166()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TDecChar tdeccharNode2 = (TDecChar)nodeArrayList1.get(0);
        ADecChar pcharNode1 = new ADecChar (
              tdeccharNode2
        );
        nodeList.add(pcharNode1);
        return nodeList;
    }
    ArrayList new167()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        THexChar thexcharNode2 = (THexChar)nodeArrayList1.get(0);
        AHexChar pcharNode1 = new AHexChar (
              thexcharNode2
        );
        nodeList.add(pcharNode1);
        return nodeList;
    }
    ArrayList new168()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PBasic pbasicNode2 = (PBasic)nodeArrayList2.get(0);
        PBinOp pbinopNode3 = (PBinOp)nodeArrayList3.get(0);
        PBasic pbasicNode4 = (PBasic)nodeArrayList4.get(0);
        AOperationSet psetNode1 = new AOperationSet (
              pbasicNode2,
              pbinopNode3,
              pbasicNode4
        );
        nodeList.add(psetNode1);
        return nodeList;
    }
    ArrayList new169()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PChar pcharNode2 = (PChar)nodeArrayList2.get(0);
        PChar pcharNode3 = (PChar)nodeArrayList4.get(0);
        AIntervalSet psetNode1 = new AIntervalSet (
              pcharNode2,
              pcharNode3
        );
        nodeList.add(psetNode1);
        return nodeList;
    }
    ArrayList new170()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TStar tstarNode2 = (TStar)nodeArrayList1.get(0);
        AStarUnOp punopNode1 = new AStarUnOp (
              tstarNode2
        );
        nodeList.add(punopNode1);
        return nodeList;
    }
    ArrayList new171()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TQMark tqmarkNode2 = (TQMark)nodeArrayList1.get(0);
        AQMarkUnOp punopNode1 = new AQMarkUnOp (
              tqmarkNode2
        );
        nodeList.add(punopNode1);
        return nodeList;
    }
    ArrayList new172()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TPlus tplusNode2 = (TPlus)nodeArrayList1.get(0);
        APlusUnOp punopNode1 = new APlusUnOp (
              tplusNode2
        );
        nodeList.add(punopNode1);
        return nodeList;
    }
    ArrayList new173()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        APlusBinOp pbinopNode1 = new APlusBinOp (
        );
        nodeList.add(pbinopNode1);
        return nodeList;
    }
    ArrayList new174()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        AMinusBinOp pbinopNode1 = new AMinusBinOp (
        );
        nodeList.add(pbinopNode1);
        return nodeList;
    }
    ArrayList new175()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        AProductions pproductionsNode1 = new AProductions (
              listNode3
        );
        nodeList.add(pproductionsNode1);
        return nodeList;
    }
    ArrayList new176()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TypedLinkedList listNode5 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode5 != null )
        {
            listNode6.addAll(listNode5);
        }
        AProd pprodNode1 = new AProd (
              tidNode2,
              null,
              listNode4,
              listNode6
        );
        nodeList.add(pprodNode1);
        return nodeList;
    }
    ArrayList new177()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode7 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TArrow tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList2.get(1);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        TypedLinkedList listNode6 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode6 != null )
        {
            listNode7.addAll(listNode6);
        }
        AProd pprodNode1 = new AProd (
              tidNode2,
              tarrowNode3,
              listNode5,
              listNode7
        );
        nodeList.add(pprodNode1);
        return nodeList;
    }
    ArrayList new178()
    {
        ArrayList nodeList = new ArrayList(2);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        TArrow tarrowNode1 = (TArrow)nodeArrayList2.get(0);
        nodeList.add(tarrowNode1);
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new179()
    {
        ArrayList nodeList = new ArrayList(2);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TArrow tarrowNode1 = (TArrow)nodeArrayList2.get(0);
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        nodeList.add(tarrowNode1);
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new180()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PAlt paltNode1 = (PAlt)nodeArrayList1.get(0);
        if ( paltNode1 != null )
        {
            listNode2.add(paltNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new181()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        PAlt paltNode1 = (PAlt)nodeArrayList1.get(0);
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( paltNode1 != null )
        {
            listNode3.add(paltNode1);
        }
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new182()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAlt paltNode1 = (PAlt)nodeArrayList2.get(0);
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new183()
    {
        ArrayList nodeList = new ArrayList(1);
        TypedLinkedList listNode3 = new TypedLinkedList();
        AParsedAlt paltNode1 = new AParsedAlt (
              null,
              listNode3,
              null
        );
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new184()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        AParsedAlt paltNode1 = new AParsedAlt (
              tidNode2,
              listNode3,
              null
        );
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new185()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        AParsedAlt paltNode1 = new AParsedAlt (
              null,
              listNode4,
              null
        );
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new186()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        AParsedAlt paltNode1 = new AParsedAlt (
              tidNode2,
              listNode4,
              null
        );
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new187()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        PAltTransform palttransformNode4 = (PAltTransform)nodeArrayList1.get(0);
        AParsedAlt paltNode1 = new AParsedAlt (
              null,
              listNode3,
              palttransformNode4
        );
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new188()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        PAltTransform palttransformNode4 = (PAltTransform)nodeArrayList2.get(0);
        AParsedAlt paltNode1 = new AParsedAlt (
              tidNode2,
              listNode3,
              palttransformNode4
        );
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new189()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        PAltTransform palttransformNode5 = (PAltTransform)nodeArrayList2.get(0);
        AParsedAlt paltNode1 = new AParsedAlt (
              null,
              listNode4,
              palttransformNode5
        );
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new190()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        PAltTransform palttransformNode5 = (PAltTransform)nodeArrayList3.get(0);
        AParsedAlt paltNode1 = new AParsedAlt (
              tidNode2,
              listNode4,
              palttransformNode5
        );
        nodeList.add(paltNode1);
        return nodeList;
    }
    ArrayList new191()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TLBrace tlbraceNode2 = (TLBrace)nodeArrayList1.get(0);
        TRBrace trbraceNode4 = (TRBrace)nodeArrayList3.get(0);
        AAltTransform palttransformNode1 = new AAltTransform (
              tlbraceNode2,
              listNode3,
              trbraceNode4
        );
        nodeList.add(palttransformNode1);
        return nodeList;
    }
    ArrayList new192()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TLBrace tlbraceNode2 = (TLBrace)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        TRBrace trbraceNode5 = (TRBrace)nodeArrayList4.get(0);
        AAltTransform palttransformNode1 = new AAltTransform (
              tlbraceNode2,
              listNode4,
              trbraceNode5
        );
        nodeList.add(palttransformNode1);
        return nodeList;
    }
    ArrayList new193()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        PProdName pprodnameNode2 = (PProdName)nodeArrayList2.get(0);
        TLPar tlparNode3 = (TLPar)nodeArrayList3.get(0);
        ANewTerm ptermNode1 = new ANewTerm (
              pprodnameNode2,
              tlparNode3,
              listNode4
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new194()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode5 = new TypedLinkedList();
        PProdName pprodnameNode2 = (PProdName)nodeArrayList2.get(0);
        TLPar tlparNode3 = (TLPar)nodeArrayList3.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        ANewTerm ptermNode1 = new ANewTerm (
              pprodnameNode2,
              tlparNode3,
              listNode5
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new195()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TLBkt tlbktNode2 = (TLBkt)nodeArrayList1.get(0);
        AListTerm ptermNode1 = new AListTerm (
              tlbktNode2,
              listNode3
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new196()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TLBkt tlbktNode2 = (TLBkt)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        AListTerm ptermNode1 = new AListTerm (
              tlbktNode2,
              listNode4
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new197()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode3 = (TId)nodeArrayList1.get(0);
        ASimpleTerm ptermNode1 = new ASimpleTerm (
              null,
              tidNode3,
              null
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new198()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSpecifier pspecifierNode2 = (PSpecifier)nodeArrayList1.get(0);
        TId tidNode3 = (TId)nodeArrayList2.get(0);
        ASimpleTerm ptermNode1 = new ASimpleTerm (
              pspecifierNode2,
              tidNode3,
              null
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new199()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode3 = (TId)nodeArrayList1.get(0);
        TId tidNode4 = (TId)nodeArrayList2.get(0);
        ASimpleTerm ptermNode1 = new ASimpleTerm (
              null,
              tidNode3,
              tidNode4
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new200()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSpecifier pspecifierNode2 = (PSpecifier)nodeArrayList1.get(0);
        TId tidNode3 = (TId)nodeArrayList2.get(0);
        TId tidNode4 = (TId)nodeArrayList3.get(0);
        ASimpleTerm ptermNode1 = new ASimpleTerm (
              pspecifierNode2,
              tidNode3,
              tidNode4
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new201()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        ANullTerm ptermNode1 = new ANullTerm (
        );
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new202()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PListTerm plisttermNode1 = (PListTerm)nodeArrayList1.get(0);
        if ( plisttermNode1 != null )
        {
            listNode2.add(plisttermNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new203()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        PListTerm plisttermNode1 = (PListTerm)nodeArrayList1.get(0);
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( plisttermNode1 != null )
        {
            listNode3.add(plisttermNode1);
        }
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new204()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        PProdName pprodnameNode2 = (PProdName)nodeArrayList2.get(0);
        TLPar tlparNode3 = (TLPar)nodeArrayList3.get(0);
        ANewListTerm plisttermNode1 = new ANewListTerm (
              pprodnameNode2,
              tlparNode3,
              listNode4
        );
        nodeList.add(plisttermNode1);
        return nodeList;
    }
    ArrayList new205()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode5 = new TypedLinkedList();
        PProdName pprodnameNode2 = (PProdName)nodeArrayList2.get(0);
        TLPar tlparNode3 = (TLPar)nodeArrayList3.get(0);
        TypedLinkedList listNode4 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode4 != null )
        {
            listNode5.addAll(listNode4);
        }
        ANewListTerm plisttermNode1 = new ANewListTerm (
              pprodnameNode2,
              tlparNode3,
              listNode5
        );
        nodeList.add(plisttermNode1);
        return nodeList;
    }
    ArrayList new206()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode3 = (TId)nodeArrayList1.get(0);
        ASimpleListTerm plisttermNode1 = new ASimpleListTerm (
              null,
              tidNode3,
              null
        );
        nodeList.add(plisttermNode1);
        return nodeList;
    }
    ArrayList new207()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSpecifier pspecifierNode2 = (PSpecifier)nodeArrayList1.get(0);
        TId tidNode3 = (TId)nodeArrayList2.get(0);
        ASimpleListTerm plisttermNode1 = new ASimpleListTerm (
              pspecifierNode2,
              tidNode3,
              null
        );
        nodeList.add(plisttermNode1);
        return nodeList;
    }
    ArrayList new208()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode3 = (TId)nodeArrayList1.get(0);
        TId tidNode4 = (TId)nodeArrayList2.get(0);
        ASimpleListTerm plisttermNode1 = new ASimpleListTerm (
              null,
              tidNode3,
              tidNode4
        );
        nodeList.add(plisttermNode1);
        return nodeList;
    }
    ArrayList new209()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSpecifier pspecifierNode2 = (PSpecifier)nodeArrayList1.get(0);
        TId tidNode3 = (TId)nodeArrayList2.get(0);
        TId tidNode4 = (TId)nodeArrayList3.get(0);
        ASimpleListTerm plisttermNode1 = new ASimpleListTerm (
              pspecifierNode2,
              tidNode3,
              tidNode4
        );
        nodeList.add(plisttermNode1);
        return nodeList;
    }
    ArrayList new210()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PListTerm plisttermNode1 = (PListTerm)nodeArrayList2.get(0);
        nodeList.add(plisttermNode1);
        return nodeList;
    }
    ArrayList new211()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode1 = (TId)nodeArrayList2.get(0);
        nodeList.add(tidNode1);
        return nodeList;
    }
    ArrayList new212()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        AProdName pprodnameNode1 = new AProdName (
              tidNode2,
              null
        );
        nodeList.add(pprodnameNode1);
        return nodeList;
    }
    ArrayList new213()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TId tidNode3 = (TId)nodeArrayList2.get(0);
        AProdName pprodnameNode1 = new AProdName (
              tidNode2,
              tidNode3
        );
        nodeList.add(pprodnameNode1);
        return nodeList;
    }
    ArrayList new214()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode1 = (TId)nodeArrayList2.get(0);
        nodeList.add(tidNode1);
        return nodeList;
    }
    ArrayList new215()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTerm ptermNode1 = (PTerm)nodeArrayList1.get(0);
        if ( ptermNode1 != null )
        {
            listNode2.add(ptermNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new216()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        PTerm ptermNode1 = (PTerm)nodeArrayList1.get(0);
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( ptermNode1 != null )
        {
            listNode3.add(ptermNode1);
        }
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new217()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PTerm ptermNode1 = (PTerm)nodeArrayList2.get(0);
        nodeList.add(ptermNode1);
        return nodeList;
    }
    ArrayList new218()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode1 = (TId)nodeArrayList2.get(0);
        nodeList.add(tidNode1);
        return nodeList;
    }
    ArrayList new219()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode4 = (TId)nodeArrayList1.get(0);
        AElem pelemNode1 = new AElem (
              null,
              null,
              tidNode4,
              null
        );
        nodeList.add(pelemNode1);
        return nodeList;
    }
    ArrayList new220()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TId tidNode4 = (TId)nodeArrayList2.get(0);
        AElem pelemNode1 = new AElem (
              tidNode2,
              null,
              tidNode4,
              null
        );
        nodeList.add(pelemNode1);
        return nodeList;
    }
    ArrayList new221()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSpecifier pspecifierNode3 = (PSpecifier)nodeArrayList1.get(0);
        TId tidNode4 = (TId)nodeArrayList2.get(0);
        AElem pelemNode1 = new AElem (
              null,
              pspecifierNode3,
              tidNode4,
              null
        );
        nodeList.add(pelemNode1);
        return nodeList;
    }
    ArrayList new222()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        PSpecifier pspecifierNode3 = (PSpecifier)nodeArrayList2.get(0);
        TId tidNode4 = (TId)nodeArrayList3.get(0);
        AElem pelemNode1 = new AElem (
              tidNode2,
              pspecifierNode3,
              tidNode4,
              null
        );
        nodeList.add(pelemNode1);
        return nodeList;
    }
    ArrayList new223()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode4 = (TId)nodeArrayList1.get(0);
        PUnOp punopNode5 = (PUnOp)nodeArrayList2.get(0);
        AElem pelemNode1 = new AElem (
              null,
              null,
              tidNode4,
              punopNode5
        );
        nodeList.add(pelemNode1);
        return nodeList;
    }
    ArrayList new224()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TId tidNode4 = (TId)nodeArrayList2.get(0);
        PUnOp punopNode5 = (PUnOp)nodeArrayList3.get(0);
        AElem pelemNode1 = new AElem (
              tidNode2,
              null,
              tidNode4,
              punopNode5
        );
        nodeList.add(pelemNode1);
        return nodeList;
    }
    ArrayList new225()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PSpecifier pspecifierNode3 = (PSpecifier)nodeArrayList1.get(0);
        TId tidNode4 = (TId)nodeArrayList2.get(0);
        PUnOp punopNode5 = (PUnOp)nodeArrayList3.get(0);
        AElem pelemNode1 = new AElem (
              null,
              pspecifierNode3,
              tidNode4,
              punopNode5
        );
        nodeList.add(pelemNode1);
        return nodeList;
    }
    ArrayList new226()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        PSpecifier pspecifierNode3 = (PSpecifier)nodeArrayList2.get(0);
        TId tidNode4 = (TId)nodeArrayList3.get(0);
        PUnOp punopNode5 = (PUnOp)nodeArrayList4.get(0);
        AElem pelemNode1 = new AElem (
              tidNode2,
              pspecifierNode3,
              tidNode4,
              punopNode5
        );
        nodeList.add(pelemNode1);
        return nodeList;
    }
    ArrayList new227()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TId tidNode1 = (TId)nodeArrayList2.get(0);
        nodeList.add(tidNode1);
        return nodeList;
    }
    ArrayList new228()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        ATokenSpecifier pspecifierNode1 = new ATokenSpecifier (
        );
        nodeList.add(pspecifierNode1);
        return nodeList;
    }
    ArrayList new229()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        AProductionSpecifier pspecifierNode1 = new AProductionSpecifier (
        );
        nodeList.add(pspecifierNode1);
        return nodeList;
    }
    ArrayList new230()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList4.get(0);
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        AAst pastNode1 = new AAst (
              listNode3
        );
        nodeList.add(pastNode1);
        return nodeList;
    }
    ArrayList new231()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList3.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        AAstProd pastprodNode1 = new AAstProd (
              tidNode2,
              listNode4
        );
        nodeList.add(pastprodNode1);
        return nodeList;
    }
    ArrayList new232()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PAstAlt pastaltNode1 = (PAstAlt)nodeArrayList1.get(0);
        if ( pastaltNode1 != null )
        {
            listNode2.add(pastaltNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new233()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        PAstAlt pastaltNode1 = (PAstAlt)nodeArrayList1.get(0);
        TypedLinkedList listNode2 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( pastaltNode1 != null )
        {
            listNode3.add(pastaltNode1);
        }
        if ( listNode2 != null )
        {
            listNode3.addAll(listNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new234()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAstAlt pastaltNode1 = (PAstAlt)nodeArrayList2.get(0);
        nodeList.add(pastaltNode1);
        return nodeList;
    }
    ArrayList new235()
    {
        ArrayList nodeList = new ArrayList(1);
        TypedLinkedList listNode3 = new TypedLinkedList();
        AAstAlt pastaltNode1 = new AAstAlt (
              null,
              listNode3
        );
        nodeList.add(pastaltNode1);
        return nodeList;
    }
    ArrayList new236()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        AAstAlt pastaltNode1 = new AAstAlt (
              tidNode2,
              listNode3
        );
        nodeList.add(pastaltNode1);
        return nodeList;
    }
    ArrayList new237()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        AAstAlt pastaltNode1 = new AAstAlt (
              null,
              listNode4
        );
        nodeList.add(pastaltNode1);
        return nodeList;
    }
    ArrayList new238()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TId tidNode2 = (TId)nodeArrayList1.get(0);
        TypedLinkedList listNode3 = (TypedLinkedList)nodeArrayList2.get(0);
        if ( listNode3 != null )
        {
            listNode4.addAll(listNode3);
        }
        AAstAlt pastaltNode1 = new AAstAlt (
              tidNode2,
              listNode4
        );
        nodeList.add(pastaltNode1);
        return nodeList;
    }
    ArrayList new239()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        TPkgId tpkgidNode1 = (TPkgId)nodeArrayList1.get(0);
        if ( tpkgidNode1 != null )
        {
            listNode2.add(tpkgidNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new240()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        TPkgId tpkgidNode2 = (TPkgId)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( tpkgidNode2 != null )
        {
            listNode3.add(tpkgidNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new241()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PHelperDef phelperdefNode1 = (PHelperDef)nodeArrayList1.get(0);
        if ( phelperdefNode1 != null )
        {
            listNode2.add(phelperdefNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new242()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PHelperDef phelperdefNode2 = (PHelperDef)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( phelperdefNode2 != null )
        {
            listNode3.add(phelperdefNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new243()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        TId tidNode1 = (TId)nodeArrayList1.get(0);
        if ( tidNode1 != null )
        {
            listNode2.add(tidNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new244()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        TId tidNode2 = (TId)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( tidNode2 != null )
        {
            listNode3.add(tidNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new245()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTokenDef ptokendefNode1 = (PTokenDef)nodeArrayList1.get(0);
        if ( ptokendefNode1 != null )
        {
            listNode2.add(ptokendefNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new246()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PTokenDef ptokendefNode2 = (PTokenDef)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( ptokendefNode2 != null )
        {
            listNode3.add(ptokendefNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new247()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PStateListTail pstatelisttailNode1 = (PStateListTail)nodeArrayList1.get(0);
        if ( pstatelisttailNode1 != null )
        {
            listNode2.add(pstatelisttailNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new248()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PStateListTail pstatelisttailNode2 = (PStateListTail)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pstatelisttailNode2 != null )
        {
            listNode3.add(pstatelisttailNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new249()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PConcat pconcatNode1 = (PConcat)nodeArrayList1.get(0);
        if ( pconcatNode1 != null )
        {
            listNode2.add(pconcatNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new250()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PConcat pconcatNode2 = (PConcat)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pconcatNode2 != null )
        {
            listNode3.add(pconcatNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new251()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PUnExp punexpNode1 = (PUnExp)nodeArrayList1.get(0);
        if ( punexpNode1 != null )
        {
            listNode2.add(punexpNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new252()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PUnExp punexpNode2 = (PUnExp)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( punexpNode2 != null )
        {
            listNode3.add(punexpNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new253()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PProd pprodNode1 = (PProd)nodeArrayList1.get(0);
        if ( pprodNode1 != null )
        {
            listNode2.add(pprodNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new254()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PProd pprodNode2 = (PProd)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pprodNode2 != null )
        {
            listNode3.add(pprodNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new255()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PElem pelemNode1 = (PElem)nodeArrayList1.get(0);
        if ( pelemNode1 != null )
        {
            listNode2.add(pelemNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new256()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PElem pelemNode2 = (PElem)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pelemNode2 != null )
        {
            listNode3.add(pelemNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new257()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PAlt paltNode1 = (PAlt)nodeArrayList1.get(0);
        if ( paltNode1 != null )
        {
            listNode2.add(paltNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new258()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PAlt paltNode2 = (PAlt)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( paltNode2 != null )
        {
            listNode3.add(paltNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new259()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTerm ptermNode1 = (PTerm)nodeArrayList1.get(0);
        if ( ptermNode1 != null )
        {
            listNode2.add(ptermNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new260()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PTerm ptermNode2 = (PTerm)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( ptermNode2 != null )
        {
            listNode3.add(ptermNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new261()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PListTerm plisttermNode1 = (PListTerm)nodeArrayList1.get(0);
        if ( plisttermNode1 != null )
        {
            listNode2.add(plisttermNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new262()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PListTerm plisttermNode2 = (PListTerm)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( plisttermNode2 != null )
        {
            listNode3.add(plisttermNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new263()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PTerm ptermNode1 = (PTerm)nodeArrayList1.get(0);
        if ( ptermNode1 != null )
        {
            listNode2.add(ptermNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new264()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PTerm ptermNode2 = (PTerm)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( ptermNode2 != null )
        {
            listNode3.add(ptermNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new265()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PAstProd pastprodNode1 = (PAstProd)nodeArrayList1.get(0);
        if ( pastprodNode1 != null )
        {
            listNode2.add(pastprodNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new266()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PAstProd pastprodNode2 = (PAstProd)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pastprodNode2 != null )
        {
            listNode3.add(pastprodNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }
    ArrayList new267()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        PAstAlt pastaltNode1 = (PAstAlt)nodeArrayList1.get(0);
        if ( pastaltNode1 != null )
        {
            listNode2.add(pastaltNode1);
        }
        nodeList.add(listNode2);
        return nodeList;
    }
    ArrayList new268()
    {
        ArrayList nodeList = new ArrayList(1);
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        PAstAlt pastaltNode2 = (PAstAlt)nodeArrayList2.get(0);
        if ( listNode1 != null )
        {
            listNode3.addAll(listNode1);
        }
        if ( pastaltNode2 != null )
        {
            listNode3.add(pastaltNode2);
        }
        nodeList.add(listNode3);
        return nodeList;
    }

    private static int[][][] actionTable; /* = {
      {
        {-1, 1, 0},
        {1, 0, 1},
        {2, 0, 2},
        {3, 0, 3},
        {4, 0, 4},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 3, 1},
        {0, 0, 16},
      },
      {
        {-1, 3, 2},
        {33, 0, 18},
      },
      {
        {-1, 3, 3},
        {33, 0, 20},
      },
      {
        {-1, 3, 4},
        {22, 0, 23},
        {33, 0, 24},
      },
      {
        {-1, 3, 5},
        {4, 0, 28},
      },
      {
        {-1, 3, 6},
        {33, 0, 29},
      },
      {
        {-1, 3, 7},
        {8, 0, 32},
      },
      {
        {-1, 3, 8},
        {38, 2, -1},
      },
      {
        {-1, 1, 1},
        {2, 0, 2},
        {3, 0, 3},
        {4, 0, 4},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 2},
        {2, 0, 2},
        {4, 0, 4},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 4},
        {4, 0, 4},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 8},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 16},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 32},
        {7, 0, 7},
      },
      {
        {-1, 1, 64},
      },
      {
        {-1, 3, 16},
        {14, 0, 54},
        {16, 0, 55},
      },
      {
        {-1, 1, 128},
      },
      {
        {-1, 1, 135},
        {29, 0, 58},
      },
      {
        {-1, 3, 19},
        {16, 0, 61},
      },
      {
        {-1, 3, 20},
        {17, 0, 62},
      },
      {
        {-1, 1, 241},
      },
      {
        {-1, 1, 132},
        {33, 0, 20},
      },
      {
        {-1, 3, 23},
        {33, 0, 64},
      },
      {
        {-1, 3, 24},
        {17, 0, 65},
      },
      {
        {-1, 1, 245},
      },
      {
        {-1, 3, 26},
        {33, 0, 66},
      },
      {
        {-1, 1, 138},
        {22, 0, 23},
        {33, 0, 24},
      },
      {
        {-1, 3, 28},
        {16, 0, 68},
        {33, 0, 18},
      },
      {
        {-1, 3, 29},
        {17, 0, 70},
        {22, 0, 71},
      },
      {
        {-1, 1, 253},
      },
      {
        {-1, 1, 175},
        {33, 0, 29},
      },
      {
        {-1, 3, 32},
        {9, 0, 74},
      },
      {
        {-1, 1, 3},
        {2, 0, 2},
        {4, 0, 4},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 5},
        {4, 0, 4},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 9},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 17},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 33},
        {7, 0, 7},
      },
      {
        {-1, 1, 65},
      },
      {
        {-1, 1, 6},
        {4, 0, 4},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 10},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 18},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 34},
        {7, 0, 7},
      },
      {
        {-1, 1, 66},
      },
      {
        {-1, 1, 12},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 20},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 36},
        {7, 0, 7},
      },
      {
        {-1, 1, 68},
      },
      {
        {-1, 1, 24},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 40},
        {7, 0, 7},
      },
      {
        {-1, 1, 72},
      },
      {
        {-1, 1, 48},
        {7, 0, 7},
      },
      {
        {-1, 1, 80},
      },
      {
        {-1, 1, 96},
      },
      {
        {-1, 3, 54},
        {0, 0, 110},
      },
      {
        {-1, 1, 129},
      },
      {
        {-1, 1, 239},
      },
      {
        {-1, 3, 57},
        {14, 0, 54},
        {16, 0, 111},
      },
      {
        {-1, 3, 58},
        {33, 0, 113},
      },
      {
        {-1, 1, 243},
      },
      {
        {-1, 1, 136},
        {29, 0, 58},
      },
      {
        {-1, 1, 134},
      },
      {
        {-1, 1, 156},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 1, 242},
      },
      {
        {-1, 3, 64},
        {23, 0, 129},
        {29, 0, 130},
        {31, 0, 131},
      },
      {
        {-1, 1, 156},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 3, 66},
        {17, 0, 136},
      },
      {
        {-1, 1, 246},
      },
      {
        {-1, 1, 150},
      },
      {
        {-1, 3, 69},
        {16, 0, 137},
      },
      {
        {-1, 1, 183},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {22, 0, 141},
        {33, 0, 142},
      },
      {
        {-1, 3, 71},
        {31, 0, 151},
      },
      {
        {-1, 3, 72},
        {17, 0, 152},
      },
      {
        {-1, 1, 254},
      },
      {
        {-1, 3, 74},
        {33, 0, 153},
      },
      {
        {-1, 1, 7},
        {4, 0, 4},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 11},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 19},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 35},
        {7, 0, 7},
      },
      {
        {-1, 1, 67},
      },
      {
        {-1, 1, 13},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 21},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 37},
        {7, 0, 7},
      },
      {
        {-1, 1, 69},
      },
      {
        {-1, 1, 25},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 41},
        {7, 0, 7},
      },
      {
        {-1, 1, 73},
      },
      {
        {-1, 1, 49},
        {7, 0, 7},
      },
      {
        {-1, 1, 81},
      },
      {
        {-1, 1, 97},
      },
      {
        {-1, 1, 14},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 22},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 38},
        {7, 0, 7},
      },
      {
        {-1, 1, 70},
      },
      {
        {-1, 1, 26},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 42},
        {7, 0, 7},
      },
      {
        {-1, 1, 74},
      },
      {
        {-1, 1, 50},
        {7, 0, 7},
      },
      {
        {-1, 1, 82},
      },
      {
        {-1, 1, 98},
      },
      {
        {-1, 1, 28},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 44},
        {7, 0, 7},
      },
      {
        {-1, 1, 76},
      },
      {
        {-1, 1, 52},
        {7, 0, 7},
      },
      {
        {-1, 1, 84},
      },
      {
        {-1, 1, 100},
      },
      {
        {-1, 1, 56},
        {7, 0, 7},
      },
      {
        {-1, 1, 88},
      },
      {
        {-1, 1, 104},
      },
      {
        {-1, 1, 112},
      },
      {
        {-1, 1, 131},
      },
      {
        {-1, 1, 130},
      },
      {
        {-1, 1, 240},
      },
      {
        {-1, 1, 137},
      },
      {
        {-1, 1, 244},
      },
      {
        {-1, 3, 115},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 1, 156},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 1, 163},
      },
      {
        {-1, 1, 165},
      },
      {
        {-1, 1, 166},
      },
      {
        {-1, 1, 167},
      },
      {
        {-1, 1, 162},
      },
      {
        {-1, 3, 122},
        {16, 0, 194},
      },
      {
        {-1, 1, 153},
        {28, 0, 195},
      },
      {
        {-1, 1, 251},
      },
      {
        {-1, 1, 158},
        {24, 0, 198},
        {26, 0, 199},
        {27, 0, 200},
      },
      {
        {-1, 1, 160},
      },
      {
        {-1, 1, 161},
      },
      {
        {-1, 1, 157},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 1, 143},
      },
      {
        {-1, 3, 130},
        {33, 0, 203},
      },
      {
        {-1, 3, 131},
        {33, 0, 204},
      },
      {
        {-1, 1, 247},
      },
      {
        {-1, 3, 133},
        {23, 0, 205},
        {29, 0, 130},
      },
      {
        {-1, 3, 134},
        {23, 0, 207},
        {29, 0, 130},
      },
      {
        {-1, 3, 135},
        {16, 0, 209},
        {30, 0, 210},
      },
      {
        {-1, 1, 156},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 1, 151},
      },
      {
        {-1, 3, 138},
        {14, 0, 213},
      },
      {
        {-1, 3, 139},
        {14, 0, 214},
      },
      {
        {-1, 3, 140},
        {33, 0, 215},
      },
      {
        {-1, 3, 141},
        {31, 0, 216},
        {33, 0, 217},
      },
      {
        {-1, 1, 219},
        {24, 0, 198},
        {26, 0, 199},
        {27, 0, 200},
      },
      {
        {-1, 3, 143},
        {16, 0, 219},
      },
      {
        {-1, 1, 180},
        {28, 0, 220},
      },
      {
        {-1, 1, 187},
      },
      {
        {-1, 1, 184},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {22, 0, 223},
        {33, 0, 142},
      },
      {
        {-1, 1, 255},
      },
      {
        {-1, 3, 148},
        {12, 0, 138},
        {13, 0, 139},
        {33, 0, 226},
      },
      {
        {-1, 3, 149},
        {33, 0, 228},
      },
      {
        {-1, 1, 185},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {22, 0, 223},
        {33, 0, 142},
      },
      {
        {-1, 3, 151},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {23, 0, 231},
        {33, 0, 142},
      },
      {
        {-1, 1, 183},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {22, 0, 141},
        {33, 0, 142},
      },
      {
        {-1, 3, 153},
        {17, 0, 234},
      },
      {
        {-1, 1, 265},
      },
      {
        {-1, 1, 230},
        {33, 0, 153},
      },
      {
        {-1, 1, 15},
        {5, 0, 5},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 23},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 39},
        {7, 0, 7},
      },
      {
        {-1, 1, 71},
      },
      {
        {-1, 1, 27},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 43},
        {7, 0, 7},
      },
      {
        {-1, 1, 75},
      },
      {
        {-1, 1, 51},
        {7, 0, 7},
      },
      {
        {-1, 1, 83},
      },
      {
        {-1, 1, 99},
      },
      {
        {-1, 1, 29},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 45},
        {7, 0, 7},
      },
      {
        {-1, 1, 77},
      },
      {
        {-1, 1, 53},
        {7, 0, 7},
      },
      {
        {-1, 1, 85},
      },
      {
        {-1, 1, 101},
      },
      {
        {-1, 1, 57},
        {7, 0, 7},
      },
      {
        {-1, 1, 89},
      },
      {
        {-1, 1, 105},
      },
      {
        {-1, 1, 113},
      },
      {
        {-1, 1, 30},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 46},
        {7, 0, 7},
      },
      {
        {-1, 1, 78},
      },
      {
        {-1, 1, 54},
        {7, 0, 7},
      },
      {
        {-1, 1, 86},
      },
      {
        {-1, 1, 102},
      },
      {
        {-1, 1, 58},
        {7, 0, 7},
      },
      {
        {-1, 1, 90},
      },
      {
        {-1, 1, 106},
      },
      {
        {-1, 1, 114},
      },
      {
        {-1, 1, 60},
        {7, 0, 7},
      },
      {
        {-1, 1, 92},
      },
      {
        {-1, 1, 108},
      },
      {
        {-1, 1, 116},
      },
      {
        {-1, 1, 120},
      },
      {
        {-1, 3, 191},
        {24, 0, 257},
        {25, 0, 258},
      },
      {
        {-1, 1, 160},
        {15, 0, 260},
      },
      {
        {-1, 3, 193},
        {21, 0, 261},
      },
      {
        {-1, 1, 133},
      },
      {
        {-1, 1, 156},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 1, 249},
      },
      {
        {-1, 1, 154},
        {28, 0, 195},
      },
      {
        {-1, 1, 172},
      },
      {
        {-1, 1, 171},
      },
      {
        {-1, 1, 170},
      },
      {
        {-1, 1, 159},
      },
      {
        {-1, 1, 252},
      },
      {
        {-1, 1, 147},
        {31, 0, 131},
      },
      {
        {-1, 1, 149},
      },
      {
        {-1, 1, 144},
      },
      {
        {-1, 3, 206},
        {23, 0, 265},
        {29, 0, 130},
      },
      {
        {-1, 1, 145},
      },
      {
        {-1, 1, 248},
      },
      {
        {-1, 1, 139},
      },
      {
        {-1, 1, 156},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 3, 211},
        {16, 0, 267},
      },
      {
        {-1, 3, 212},
        {16, 0, 268},
        {30, 0, 210},
      },
      {
        {-1, 1, 228},
      },
      {
        {-1, 1, 229},
      },
      {
        {-1, 3, 215},
        {19, 0, 270},
      },
      {
        {-1, 3, 216},
        {10, 0, 271},
        {11, 0, 272},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 273},
        {23, 0, 274},
        {33, 0, 275},
      },
      {
        {-1, 3, 217},
        {23, 0, 279},
      },
      {
        {-1, 1, 223},
      },
      {
        {-1, 1, 176},
      },
      {
        {-1, 1, 183},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {22, 0, 141},
        {33, 0, 142},
      },
      {
        {-1, 1, 257},
      },
      {
        {-1, 1, 181},
        {28, 0, 220},
      },
      {
        {-1, 3, 223},
        {31, 0, 216},
      },
      {
        {-1, 1, 188},
      },
      {
        {-1, 1, 186},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {22, 0, 223},
        {33, 0, 142},
      },
      {
        {-1, 1, 220},
        {24, 0, 198},
        {26, 0, 199},
        {27, 0, 200},
      },
      {
        {-1, 3, 227},
        {33, 0, 284},
      },
      {
        {-1, 1, 221},
        {24, 0, 198},
        {26, 0, 199},
        {27, 0, 200},
      },
      {
        {-1, 1, 189},
      },
      {
        {-1, 1, 256},
      },
      {
        {-1, 1, 178},
      },
      {
        {-1, 3, 232},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {23, 0, 286},
        {33, 0, 142},
      },
      {
        {-1, 3, 233},
        {16, 0, 287},
      },
      {
        {-1, 1, 235},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {22, 0, 288},
        {33, 0, 142},
      },
      {
        {-1, 1, 266},
      },
      {
        {-1, 1, 31},
        {6, 0, 6},
        {7, 0, 7},
      },
      {
        {-1, 1, 47},
        {7, 0, 7},
      },
      {
        {-1, 1, 79},
      },
      {
        {-1, 1, 55},
        {7, 0, 7},
      },
      {
        {-1, 1, 87},
      },
      {
        {-1, 1, 103},
      },
      {
        {-1, 1, 59},
        {7, 0, 7},
      },
      {
        {-1, 1, 91},
      },
      {
        {-1, 1, 107},
      },
      {
        {-1, 1, 115},
      },
      {
        {-1, 1, 61},
        {7, 0, 7},
      },
      {
        {-1, 1, 93},
      },
      {
        {-1, 1, 109},
      },
      {
        {-1, 1, 117},
      },
      {
        {-1, 1, 121},
      },
      {
        {-1, 1, 62},
        {7, 0, 7},
      },
      {
        {-1, 1, 94},
      },
      {
        {-1, 1, 110},
      },
      {
        {-1, 1, 118},
      },
      {
        {-1, 1, 122},
      },
      {
        {-1, 1, 124},
      },
      {
        {-1, 1, 173},
      },
      {
        {-1, 1, 174},
      },
      {
        {-1, 3, 259},
        {18, 0, 115},
        {20, 0, 116},
        {33, 0, 117},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
        {37, 0, 121},
      },
      {
        {-1, 3, 260},
        {34, 0, 118},
        {35, 0, 119},
        {36, 0, 120},
      },
      {
        {-1, 1, 164},
      },
      {
        {-1, 1, 155},
      },
      {
        {-1, 1, 250},
      },
      {
        {-1, 1, 148},
      },
      {
        {-1, 1, 146},
      },
      {
        {-1, 1, 152},
      },
      {
        {-1, 1, 141},
      },
      {
        {-1, 1, 140},
      },
      {
        {-1, 3, 269},
        {16, 0, 302},
      },
      {
        {-1, 3, 270},
        {32, 0, 303},
      },
      {
        {-1, 3, 271},
        {33, 0, 304},
      },
      {
        {-1, 1, 201},
      },
      {
        {-1, 3, 273},
        {10, 0, 306},
        {12, 0, 138},
        {13, 0, 139},
        {19, 0, 307},
        {33, 0, 308},
      },
      {
        {-1, 1, 191},
      },
      {
        {-1, 1, 197},
        {14, 0, 312},
      },
      {
        {-1, 1, 259},
      },
      {
        {-1, 3, 277},
        {33, 0, 314},
      },
      {
        {-1, 3, 278},
        {10, 0, 271},
        {11, 0, 272},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 273},
        {23, 0, 315},
        {33, 0, 275},
      },
      {
        {-1, 1, 218},
      },
      {
        {-1, 1, 182},
      },
      {
        {-1, 1, 258},
      },
      {
        {-1, 1, 190},
      },
      {
        {-1, 1, 224},
      },
      {
        {-1, 1, 222},
        {24, 0, 198},
        {26, 0, 199},
        {27, 0, 200},
      },
      {
        {-1, 1, 225},
      },
      {
        {-1, 1, 179},
      },
      {
        {-1, 1, 177},
      },
      {
        {-1, 3, 288},
        {33, 0, 217},
      },
      {
        {-1, 1, 236},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {33, 0, 142},
      },
      {
        {-1, 3, 290},
        {16, 0, 319},
      },
      {
        {-1, 1, 232},
        {28, 0, 320},
      },
      {
        {-1, 1, 237},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {33, 0, 142},
      },
      {
        {-1, 1, 63},
        {7, 0, 7},
      },
      {
        {-1, 1, 95},
      },
      {
        {-1, 1, 111},
      },
      {
        {-1, 1, 119},
      },
      {
        {-1, 1, 123},
      },
      {
        {-1, 1, 125},
      },
      {
        {-1, 1, 126},
      },
      {
        {-1, 3, 300},
        {19, 0, 324},
      },
      {
        {-1, 3, 301},
        {19, 0, 325},
      },
      {
        {-1, 1, 142},
      },
      {
        {-1, 1, 227},
      },
      {
        {-1, 1, 212},
        {14, 0, 326},
      },
      {
        {-1, 3, 305},
        {20, 0, 328},
      },
      {
        {-1, 3, 306},
        {33, 0, 304},
      },
      {
        {-1, 1, 195},
      },
      {
        {-1, 1, 206},
        {14, 0, 312},
      },
      {
        {-1, 3, 309},
        {19, 0, 331},
      },
      {
        {-1, 1, 202},
        {29, 0, 332},
      },
      {
        {-1, 3, 311},
        {33, 0, 335},
      },
      {
        {-1, 3, 312},
        {33, 0, 336},
      },
      {
        {-1, 1, 199},
      },
      {
        {-1, 1, 198},
        {14, 0, 312},
      },
      {
        {-1, 1, 192},
      },
      {
        {-1, 1, 260},
      },
      {
        {-1, 1, 226},
      },
      {
        {-1, 1, 238},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {33, 0, 142},
      },
      {
        {-1, 1, 231},
      },
      {
        {-1, 1, 235},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 140},
        {22, 0, 288},
        {33, 0, 142},
      },
      {
        {-1, 1, 267},
      },
      {
        {-1, 1, 233},
        {28, 0, 320},
      },
      {
        {-1, 1, 127},
      },
      {
        {-1, 1, 168},
      },
      {
        {-1, 1, 169},
      },
      {
        {-1, 3, 326},
        {33, 0, 340},
      },
      {
        {-1, 1, 213},
      },
      {
        {-1, 3, 328},
        {10, 0, 271},
        {11, 0, 272},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 273},
        {21, 0, 341},
        {33, 0, 275},
      },
      {
        {-1, 3, 329},
        {20, 0, 344},
      },
      {
        {-1, 1, 208},
      },
      {
        {-1, 1, 196},
      },
      {
        {-1, 3, 332},
        {10, 0, 306},
        {12, 0, 138},
        {13, 0, 139},
        {33, 0, 308},
      },
      {
        {-1, 1, 261},
      },
      {
        {-1, 1, 203},
        {29, 0, 332},
      },
      {
        {-1, 1, 207},
        {14, 0, 312},
      },
      {
        {-1, 1, 211},
      },
      {
        {-1, 1, 200},
      },
      {
        {-1, 1, 234},
      },
      {
        {-1, 1, 268},
      },
      {
        {-1, 1, 214},
      },
      {
        {-1, 1, 193},
      },
      {
        {-1, 1, 215},
        {29, 0, 348},
      },
      {
        {-1, 3, 343},
        {21, 0, 351},
      },
      {
        {-1, 3, 344},
        {10, 0, 271},
        {11, 0, 272},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 273},
        {21, 0, 352},
        {33, 0, 275},
      },
      {
        {-1, 1, 210},
      },
      {
        {-1, 1, 262},
      },
      {
        {-1, 1, 209},
      },
      {
        {-1, 3, 348},
        {10, 0, 271},
        {11, 0, 272},
        {12, 0, 138},
        {13, 0, 139},
        {18, 0, 273},
        {33, 0, 275},
      },
      {
        {-1, 1, 263},
      },
      {
        {-1, 1, 216},
        {29, 0, 348},
      },
      {
        {-1, 1, 194},
      },
      {
        {-1, 1, 204},
      },
      {
        {-1, 3, 353},
        {21, 0, 356},
      },
      {
        {-1, 1, 217},
      },
      {
        {-1, 1, 264},
      },
      {
        {-1, 1, 205},
      },
    }; */

    private static int[][][] gotoTable; /* = {
      {
        {-1, 8},
      },
      {
        {-1, 9},
      },
      {
        {-1, 17},
      },
      {
        {-1, 56},
        {57, 112},
      },
      {
        {-1, 10},
        {9, 33},
      },
      {
        {-1, 21},
        {22, 63},
      },
      {
        {-1, 11},
        {9, 34},
        {10, 39},
        {33, 75},
      },
      {
        {-1, 19},
        {28, 69},
      },
      {
        {-1, 59},
        {60, 114},
      },
      {
        {-1, 12},
        {9, 35},
        {10, 40},
        {11, 44},
        {33, 76},
        {34, 80},
        {39, 90},
        {75, 156},
      },
      {
        {-1, 25},
        {27, 67},
      },
      {
        {-1, 26},
      },
      {
        {-1, 132},
        {134, 208},
        {206, 208},
      },
      {
        {-1, 133},
        {203, 264},
      },
      {
        {-1, 13},
        {9, 36},
        {10, 41},
        {11, 45},
        {12, 48},
        {33, 77},
        {34, 81},
        {35, 84},
        {39, 91},
        {40, 94},
        {44, 100},
        {75, 157},
        {76, 160},
        {80, 166},
        {90, 176},
        {156, 236},
      },
      {
        {-1, 211},
        {212, 269},
      },
      {
        {-1, 122},
        {65, 135},
        {116, 193},
        {136, 212},
        {210, 266},
      },
      {
        {-1, 196},
        {197, 263},
      },
      {
        {-1, 123},
        {195, 262},
      },
      {
        {-1, 124},
        {128, 202},
      },
      {
        {-1, 125},
        {115, 191},
        {259, 300},
      },
      {
        {-1, 126},
        {115, 192},
        {260, 301},
      },
      {
        {-1, 127},
      },
      {
        {-1, 201},
        {142, 218},
        {226, 283},
        {228, 285},
        {284, 317},
      },
      {
        {-1, 259},
      },
      {
        {-1, 14},
        {9, 37},
        {10, 42},
        {11, 46},
        {12, 49},
        {13, 51},
        {33, 78},
        {34, 82},
        {35, 85},
        {36, 87},
        {39, 92},
        {40, 95},
        {41, 97},
        {44, 101},
        {45, 103},
        {48, 106},
        {75, 158},
        {76, 161},
        {77, 163},
        {80, 167},
        {81, 169},
        {84, 172},
        {90, 177},
        {91, 179},
        {94, 182},
        {100, 186},
        {156, 237},
        {157, 239},
        {160, 242},
        {166, 246},
        {176, 251},
        {236, 293},
      },
      {
        {-1, 30},
        {31, 73},
      },
      {
        {-1, 72},
      },
      {
        {-1, 143},
        {152, 233},
      },
      {
        {-1, 221},
        {222, 281},
      },
      {
        {-1, 144},
        {220, 280},
      },
      {
        {-1, 145},
        {146, 224},
        {150, 229},
        {225, 282},
      },
      {
        {-1, 342},
        {216, 276},
        {278, 316},
        {348, 354},
      },
      {
        {-1, 309},
      },
      {
        {-1, 310},
        {332, 345},
      },
      {
        {-1, 333},
        {334, 346},
      },
      {
        {-1, 313},
        {308, 330},
        {314, 337},
        {335, 347},
      },
      {
        {-1, 305},
        {306, 329},
      },
      {
        {-1, 327},
      },
      {
        {-1, 343},
        {344, 353},
      },
      {
        {-1, 349},
        {350, 355},
      },
      {
        {-1, 146},
        {234, 289},
        {320, 289},
      },
      {
        {-1, 147},
        {150, 230},
        {225, 230},
        {232, 230},
        {292, 230},
        {318, 230},
      },
      {
        {-1, 148},
      },
      {
        {-1, 149},
        {148, 227},
        {216, 277},
        {273, 311},
        {278, 277},
        {328, 277},
        {332, 311},
        {344, 277},
        {348, 277},
      },
      {
        {-1, 15},
        {9, 38},
        {10, 43},
        {11, 47},
        {12, 50},
        {13, 52},
        {14, 53},
        {33, 79},
        {34, 83},
        {35, 86},
        {36, 88},
        {37, 89},
        {39, 93},
        {40, 96},
        {41, 98},
        {42, 99},
        {44, 102},
        {45, 104},
        {46, 105},
        {48, 107},
        {49, 108},
        {51, 109},
        {75, 159},
        {76, 162},
        {77, 164},
        {78, 165},
        {80, 168},
        {81, 170},
        {82, 171},
        {84, 173},
        {85, 174},
        {87, 175},
        {90, 178},
        {91, 180},
        {92, 181},
        {94, 183},
        {95, 184},
        {97, 185},
        {100, 187},
        {101, 188},
        {103, 189},
        {106, 190},
        {156, 238},
        {157, 240},
        {158, 241},
        {160, 243},
        {161, 244},
        {163, 245},
        {166, 247},
        {167, 248},
        {169, 249},
        {172, 250},
        {176, 252},
        {177, 253},
        {179, 254},
        {182, 255},
        {186, 256},
        {236, 294},
        {237, 295},
        {239, 296},
        {242, 297},
        {246, 298},
        {251, 299},
        {293, 323},
      },
      {
        {-1, 154},
        {155, 235},
      },
      {
        {-1, 290},
      },
      {
        {-1, 321},
        {322, 339},
      },
      {
        {-1, 291},
        {320, 338},
      },
      {
        {-1, 57},
      },
      {
        {-1, 22},
      },
      {
        {-1, 60},
      },
      {
        {-1, 27},
      },
      {
        {-1, 134},
        {133, 206},
      },
      {
        {-1, 197},
      },
      {
        {-1, 128},
      },
      {
        {-1, 31},
      },
      {
        {-1, 150},
        {146, 225},
        {151, 232},
        {234, 292},
        {289, 318},
        {320, 292},
      },
      {
        {-1, 222},
      },
      {
        {-1, 278},
      },
      {
        {-1, 334},
      },
      {
        {-1, 350},
      },
      {
        {-1, 155},
      },
      {
        {-1, 322},
      },
    };
    */
    private static String[] errorMessages; /* = {
      "expecting: 'Package', 'States', 'Helpers', 'Tokens', 'Ignored', 'Productions', 'Abstract', EOF",
      "expecting: pkg id",
      "expecting: id",
      "expecting: '{', id",
      "expecting: 'Tokens'",
      "expecting: 'Syntax'",
      "expecting: EOF",
      "expecting: 'States', 'Helpers', 'Tokens', 'Ignored', 'Productions', 'Abstract', EOF",
      "expecting: 'States', 'Tokens', 'Ignored', 'Productions', 'Abstract', EOF",
      "expecting: 'Tokens', 'Ignored', 'Productions', 'Abstract', EOF",
      "expecting: 'Ignored', 'Productions', 'Abstract', EOF",
      "expecting: 'Productions', 'Abstract', EOF",
      "expecting: 'Abstract', EOF",
      "expecting: '.', ';'",
      "expecting: ';', ','",
      "expecting: ';'",
      "expecting: '='",
      "expecting: 'States', 'Tokens', 'Ignored', 'Productions', 'Abstract', id, EOF",
      "expecting: 'Ignored', 'Productions', 'Abstract', '{', id, EOF",
      "expecting: ';', id",
      "expecting: '=', '{'",
      "expecting: 'Abstract', id, EOF",
      "expecting: 'Tree'",
      "expecting: ';', '[', '(', '|', id, char, dec char, hex char, string",
      "expecting: '}', ',', '->'",
      "expecting: ';', '[', '(', '|', '/', id, char, dec char, hex char, string",
      "expecting: 'T', 'P', ';', '[', '{', '|', id",
      "expecting: '->'",
      "expecting: '[', '(', id, char, dec char, hex char, string",
      "expecting: '[', '(', ')', '|', id, char, dec char, hex char, string",
      "expecting: ';', '[', ']', '(', ')', '+', '-', '?', '*', '|', '/', id, char, dec char, hex char, string",
      "expecting: '..', ';', '[', ']', '(', ')', '+', '-', '?', '*', '|', '/', id, char, dec char, hex char, string",
      "expecting: ';', ')', '|', '/'",
      "expecting: ';', '[', '(', ')', '|', '/', id, char, dec char, hex char, string",
      "expecting: ';', '[', '(', ')', '+', '?', '*', '|', '/', id, char, dec char, hex char, string",
      "expecting: ';', '[', ']', '(', ')', '+', '?', '*', '|', '/', id, char, dec char, hex char, string",
      "expecting: '}', ','",
      "expecting: ';', '/'",
      "expecting: '.'",
      "expecting: '->', id",
      "expecting: 'T', 'P', ';', '[', '{', '}', '+', '?', '*', '|', id",
      "expecting: ';', '|'",
      "expecting: 'T', 'P', ';', '[', '{', '}', '|', id",
      "expecting: 'T', 'P', id",
      "expecting: 'T', 'P', '[', '}', id",
      "expecting: id, EOF",
      "expecting: '+', '-'",
      "expecting: '..', '+', '-'",
      "expecting: ')'",
      "expecting: 'T', 'P', ';', '[', '(', ')', '{', '}', '|', '/', id, char, dec char, hex char, string",
      "expecting: ']'",
      "expecting: 'New', 'Null', 'T', 'P', '[', '}', id",
      "expecting: '}'",
      "expecting: char, dec char, hex char",
      "expecting: ':'",
      "expecting: 'New', 'Null', 'T', 'P', '[', ')', '}', ',', id",
      "expecting: 'New', 'T', 'P', ']', id",
      "expecting: 'New', 'Null', 'T', 'P', '.', '[', ')', '}', ',', id",
      "expecting: 'T', 'P', ';', '[', '|', id",
      "expecting: '.', '('",
      "expecting: '('",
      "expecting: '.', ']', ','",
      "expecting: ']', ','",
      "expecting: 'New', 'Null', 'T', 'P', '[', ')', id",
      "expecting: 'New', 'T', 'P', id",
      "expecting: 'New', 'Null', 'T', 'P', '[', ']', ')', '}', ',', id",
      "expecting: ')', ','",
      "expecting: 'New', 'Null', 'T', 'P', '[', id",
    };
    */
    private static int[] errors; /* = {
0, 1, 2, 2, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 6, 13, 7, 14, 15, 16, 17, 17, 2, 16, 18, 2, 18, 19, 20, 21, 21, 22, 8, 9, 10, 11, 12, 6, 9, 10, 11, 12, 6, 10, 11, 12, 6, 11, 12, 6, 12, 6, 6, 1, 7, 13, 13, 2, 14, 14, 9, 23, 17, 24, 25, 16, 18, 11, 15, 26, 27, 16, 21, 2, 9, 10, 11, 12, 6, 10, 11, 12, 6, 11, 12, 6, 12, 6, 6, 10, 11, 12, 6, 11, 12, 6, 12, 6, 6, 11, 12, 6, 12, 6, 6, 12, 6, 6, 6, 13, 7, 13, 14, 14, 28, 29, 30, 31, 31, 31, 30, 15, 32, 33, 34, 35, 30, 33, 2, 2, 2, 36, 36, 36, 37, 25, 11, 38, 38, 2, 39, 40, 15, 41, 41, 26, 42, 43, 2, 26, 44, 26, 16, 45, 45, 10, 11, 12, 6, 11, 12, 6, 12, 6, 6, 11, 12, 6, 12, 6, 6, 12, 6, 6, 6, 11, 12, 6, 12, 6, 6, 12, 6, 6, 6, 12, 6, 6, 6, 6, 46, 47, 48, 17, 33, 32, 32, 49, 49, 49, 33, 33, 24, 36, 2, 36, 2, 36, 18, 23, 15, 37, 2, 2, 50, 51, 52, 42, 21, 26, 41, 41, 27, 41, 26, 40, 2, 40, 41, 42, 16, 44, 15, 26, 45, 11, 12, 6, 12, 6, 6, 12, 6, 6, 6, 12, 6, 6, 6, 6, 12, 6, 6, 6, 6, 6, 28, 28, 28, 53, 30, 32, 32, 36, 2, 15, 18, 18, 15, 54, 2, 55, 56, 41, 57, 51, 2, 51, 26, 41, 41, 41, 42, 40, 42, 16, 21, 2, 58, 15, 41, 58, 12, 6, 6, 6, 6, 6, 6, 50, 50, 18, 43, 59, 60, 2, 55, 61, 50, 62, 2, 2, 55, 57, 41, 51, 42, 58, 45, 26, 41, 41, 6, 30, 30, 2, 60, 63, 60, 62, 55, 64, 62, 62, 61, 65, 55, 41, 41, 60, 55, 66, 48, 63, 62, 62, 62, 67, 66, 66, 55, 62, 48, 66, 66, 62, 

    };
    */

    static
    {
        try
        {
            BufferedReader r = new BufferedReader (new InputStreamReader (
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = Integer.parseInt(r.readLine());
            actionTable = new int[length][][];
            for(int i = 0; i < actionTable.length; i++)
            {
                length = Integer.parseInt(r.readLine());
                actionTable[i] = new int[length][3];
                for(int j = 0; j < actionTable[i].length; j++)
                {
                    for(int k = 0; k < 3; k++)
                    {
                        actionTable[i][j][k] = Integer.parseInt(r.readLine());
                    }
                }
            }

            // read gotoTable
            length = Integer.parseInt(r.readLine());
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = Integer.parseInt(r.readLine());
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    for(int k = 0; k < 2; k++)
                    {
                        gotoTable[i][j][k] = Integer.parseInt(r.readLine());
                    }
                }
            }

            // read errorMessages
            length = Integer.parseInt(r.readLine());
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                errorMessages[i] = unescape(r.readLine());
            }

            // read errors
            length = Integer.parseInt(r.readLine());
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = Integer.parseInt(r.readLine());
            }

            r.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }

    private static String unescape (String str)
    {
      StringBuffer out = new StringBuffer ();
      for ( int i = 0; i < str.length(); i++ )
        {
          char c = str.charAt(i);

          switch (c)
          {
            case '\\':
              if ( i + 1 < str.length() )
              {
                i++;
                switch (str.charAt(i))
                  {
                    case 'n':
                      out.append ("\n");
                      break;
                    case 'r':
                      out.append ("\r");
                      break;
                    case '"':
                      out.append ("\"");
                      break;
                    case '\\':
                      out.append ("\\");
                      break;
                    case '0':
                      if ( str.substring(i).startsWith ("000") )
                        {
                          out.append ("\000");
                          i += 2;
                        }
                      else
                        {
                          out.append ("\\");
                          out.append (str.charAt(i));
                        }
                      break;
                    case 'u':
                      String hstr = str.substring(i, i + 4);
                      if ( hstr.length() == 4 )
                        {
                          try
                          {
                            out.append ((char)Integer.parseInt(hstr, 16));
                            i += 4;
                          } catch (NumberFormatException ex)
                          {
                            out.append ("\\");
                            out.append (str.charAt(i));
                          }
                        }
                      else
                        {
                          out.append ("\\");
                          out.append (str.charAt(i));
                        }
                      break;
                    default:
                      out.append ("\\");
                      out.append (str.charAt(i));
                      break;
                  }
              }
              else
              {
                out.append (c);
              }

              break;
            default:
              out.append (c);
              break;
          }
        }
      return out.toString();
    }
}
